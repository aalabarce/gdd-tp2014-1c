//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.4927
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FrbaCommerce {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GD1C2014DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GD1C2014DataSet : global::System.Data.DataSet {
        
        private CLIENTEDataTable tableCLIENTE;
        
        private EMPRESADataTable tableEMPRESA;
        
        private FUNCIONALIDADDataTable tableFUNCIONALIDAD;
        
        private ROLDataTable tableROL;
        
        private ROL_FUNCIONALIDADDataTable tableROL_FUNCIONALIDAD;
        
        private USUARIODataTable tableUSUARIO;
        
        private USUARIO_ROLDataTable tableUSUARIO_ROL;
        
        private global::System.Data.DataRelation relationFK__CLIENTE__CLI_USU__182C9B23;
        
        private global::System.Data.DataRelation relationFK__EMPRESA__EMP_USU__21B6055D;
        
        private global::System.Data.DataRelation relationFK__ROL_FUNCI__ROL_F__1273C1CD;
        
        private global::System.Data.DataRelation relationFK__ROL_FUNCI__ROL_F__1367E606;
        
        private global::System.Data.DataRelation relationFK__USUARIO_R__USU_R__08EA5793;
        
        private global::System.Data.DataRelation relationFK__USUARIO_R__USU_R__09DE7BCC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GD1C2014DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GD1C2014DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["EMPRESA"] != null)) {
                    base.Tables.Add(new EMPRESADataTable(ds.Tables["EMPRESA"]));
                }
                if ((ds.Tables["FUNCIONALIDAD"] != null)) {
                    base.Tables.Add(new FUNCIONALIDADDataTable(ds.Tables["FUNCIONALIDAD"]));
                }
                if ((ds.Tables["ROL"] != null)) {
                    base.Tables.Add(new ROLDataTable(ds.Tables["ROL"]));
                }
                if ((ds.Tables["ROL_FUNCIONALIDAD"] != null)) {
                    base.Tables.Add(new ROL_FUNCIONALIDADDataTable(ds.Tables["ROL_FUNCIONALIDAD"]));
                }
                if ((ds.Tables["USUARIO"] != null)) {
                    base.Tables.Add(new USUARIODataTable(ds.Tables["USUARIO"]));
                }
                if ((ds.Tables["USUARIO_ROL"] != null)) {
                    base.Tables.Add(new USUARIO_ROLDataTable(ds.Tables["USUARIO_ROL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLIENTEDataTable CLIENTE {
            get {
                return this.tableCLIENTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPRESADataTable EMPRESA {
            get {
                return this.tableEMPRESA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FUNCIONALIDADDataTable FUNCIONALIDAD {
            get {
                return this.tableFUNCIONALIDAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROLDataTable ROL {
            get {
                return this.tableROL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROL_FUNCIONALIDADDataTable ROL_FUNCIONALIDAD {
            get {
                return this.tableROL_FUNCIONALIDAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public USUARIODataTable USUARIO {
            get {
                return this.tableUSUARIO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public USUARIO_ROLDataTable USUARIO_ROL {
            get {
                return this.tableUSUARIO_ROL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GD1C2014DataSet cln = ((GD1C2014DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["EMPRESA"] != null)) {
                    base.Tables.Add(new EMPRESADataTable(ds.Tables["EMPRESA"]));
                }
                if ((ds.Tables["FUNCIONALIDAD"] != null)) {
                    base.Tables.Add(new FUNCIONALIDADDataTable(ds.Tables["FUNCIONALIDAD"]));
                }
                if ((ds.Tables["ROL"] != null)) {
                    base.Tables.Add(new ROLDataTable(ds.Tables["ROL"]));
                }
                if ((ds.Tables["ROL_FUNCIONALIDAD"] != null)) {
                    base.Tables.Add(new ROL_FUNCIONALIDADDataTable(ds.Tables["ROL_FUNCIONALIDAD"]));
                }
                if ((ds.Tables["USUARIO"] != null)) {
                    base.Tables.Add(new USUARIODataTable(ds.Tables["USUARIO"]));
                }
                if ((ds.Tables["USUARIO_ROL"] != null)) {
                    base.Tables.Add(new USUARIO_ROLDataTable(ds.Tables["USUARIO_ROL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCLIENTE = ((CLIENTEDataTable)(base.Tables["CLIENTE"]));
            if ((initTable == true)) {
                if ((this.tableCLIENTE != null)) {
                    this.tableCLIENTE.InitVars();
                }
            }
            this.tableEMPRESA = ((EMPRESADataTable)(base.Tables["EMPRESA"]));
            if ((initTable == true)) {
                if ((this.tableEMPRESA != null)) {
                    this.tableEMPRESA.InitVars();
                }
            }
            this.tableFUNCIONALIDAD = ((FUNCIONALIDADDataTable)(base.Tables["FUNCIONALIDAD"]));
            if ((initTable == true)) {
                if ((this.tableFUNCIONALIDAD != null)) {
                    this.tableFUNCIONALIDAD.InitVars();
                }
            }
            this.tableROL = ((ROLDataTable)(base.Tables["ROL"]));
            if ((initTable == true)) {
                if ((this.tableROL != null)) {
                    this.tableROL.InitVars();
                }
            }
            this.tableROL_FUNCIONALIDAD = ((ROL_FUNCIONALIDADDataTable)(base.Tables["ROL_FUNCIONALIDAD"]));
            if ((initTable == true)) {
                if ((this.tableROL_FUNCIONALIDAD != null)) {
                    this.tableROL_FUNCIONALIDAD.InitVars();
                }
            }
            this.tableUSUARIO = ((USUARIODataTable)(base.Tables["USUARIO"]));
            if ((initTable == true)) {
                if ((this.tableUSUARIO != null)) {
                    this.tableUSUARIO.InitVars();
                }
            }
            this.tableUSUARIO_ROL = ((USUARIO_ROLDataTable)(base.Tables["USUARIO_ROL"]));
            if ((initTable == true)) {
                if ((this.tableUSUARIO_ROL != null)) {
                    this.tableUSUARIO_ROL.InitVars();
                }
            }
            this.relationFK__CLIENTE__CLI_USU__182C9B23 = this.Relations["FK__CLIENTE__CLI_USU__182C9B23"];
            this.relationFK__EMPRESA__EMP_USU__21B6055D = this.Relations["FK__EMPRESA__EMP_USU__21B6055D"];
            this.relationFK__ROL_FUNCI__ROL_F__1273C1CD = this.Relations["FK__ROL_FUNCI__ROL_F__1273C1CD"];
            this.relationFK__ROL_FUNCI__ROL_F__1367E606 = this.Relations["FK__ROL_FUNCI__ROL_F__1367E606"];
            this.relationFK__USUARIO_R__USU_R__08EA5793 = this.Relations["FK__USUARIO_R__USU_R__08EA5793"];
            this.relationFK__USUARIO_R__USU_R__09DE7BCC = this.Relations["FK__USUARIO_R__USU_R__09DE7BCC"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GD1C2014DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GD1C2014DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCLIENTE = new CLIENTEDataTable();
            base.Tables.Add(this.tableCLIENTE);
            this.tableEMPRESA = new EMPRESADataTable();
            base.Tables.Add(this.tableEMPRESA);
            this.tableFUNCIONALIDAD = new FUNCIONALIDADDataTable();
            base.Tables.Add(this.tableFUNCIONALIDAD);
            this.tableROL = new ROLDataTable();
            base.Tables.Add(this.tableROL);
            this.tableROL_FUNCIONALIDAD = new ROL_FUNCIONALIDADDataTable();
            base.Tables.Add(this.tableROL_FUNCIONALIDAD);
            this.tableUSUARIO = new USUARIODataTable();
            base.Tables.Add(this.tableUSUARIO);
            this.tableUSUARIO_ROL = new USUARIO_ROLDataTable();
            base.Tables.Add(this.tableUSUARIO_ROL);
            this.relationFK__CLIENTE__CLI_USU__182C9B23 = new global::System.Data.DataRelation("FK__CLIENTE__CLI_USU__182C9B23", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.USU_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CLI_USU_IDColumn}, false);
            this.Relations.Add(this.relationFK__CLIENTE__CLI_USU__182C9B23);
            this.relationFK__EMPRESA__EMP_USU__21B6055D = new global::System.Data.DataRelation("FK__EMPRESA__EMP_USU__21B6055D", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.USU_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableEMPRESA.EMP_USU_IDColumn}, false);
            this.Relations.Add(this.relationFK__EMPRESA__EMP_USU__21B6055D);
            this.relationFK__ROL_FUNCI__ROL_F__1273C1CD = new global::System.Data.DataRelation("FK__ROL_FUNCI__ROL_F__1273C1CD", new global::System.Data.DataColumn[] {
                        this.tableROL.ROL_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableROL_FUNCIONALIDAD.ROL_FUN_ROLColumn}, false);
            this.Relations.Add(this.relationFK__ROL_FUNCI__ROL_F__1273C1CD);
            this.relationFK__ROL_FUNCI__ROL_F__1367E606 = new global::System.Data.DataRelation("FK__ROL_FUNCI__ROL_F__1367E606", new global::System.Data.DataColumn[] {
                        this.tableFUNCIONALIDAD.FUN_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableROL_FUNCIONALIDAD.ROL_FUN_FUNColumn}, false);
            this.Relations.Add(this.relationFK__ROL_FUNCI__ROL_F__1367E606);
            this.relationFK__USUARIO_R__USU_R__08EA5793 = new global::System.Data.DataRelation("FK__USUARIO_R__USU_R__08EA5793", new global::System.Data.DataColumn[] {
                        this.tableUSUARIO.USU_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableUSUARIO_ROL.USU_ROL_USUARIO_IDColumn}, false);
            this.Relations.Add(this.relationFK__USUARIO_R__USU_R__08EA5793);
            this.relationFK__USUARIO_R__USU_R__09DE7BCC = new global::System.Data.DataRelation("FK__USUARIO_R__USU_R__09DE7BCC", new global::System.Data.DataColumn[] {
                        this.tableROL.ROL_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableUSUARIO_ROL.USU_ROL_ROL_IDColumn}, false);
            this.Relations.Add(this.relationFK__USUARIO_R__USU_R__09DE7BCC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCLIENTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEMPRESA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFUNCIONALIDAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeROL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeROL_FUNCIONALIDAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUSUARIO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUSUARIO_ROL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GD1C2014DataSet ds = new GD1C2014DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CLIENTERowChangeEventHandler(object sender, CLIENTERowChangeEvent e);
        
        public delegate void EMPRESARowChangeEventHandler(object sender, EMPRESARowChangeEvent e);
        
        public delegate void FUNCIONALIDADRowChangeEventHandler(object sender, FUNCIONALIDADRowChangeEvent e);
        
        public delegate void ROLRowChangeEventHandler(object sender, ROLRowChangeEvent e);
        
        public delegate void ROL_FUNCIONALIDADRowChangeEventHandler(object sender, ROL_FUNCIONALIDADRowChangeEvent e);
        
        public delegate void USUARIORowChangeEventHandler(object sender, USUARIORowChangeEvent e);
        
        public delegate void USUARIO_ROLRowChangeEventHandler(object sender, USUARIO_ROLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLIENTEDataTable : global::System.Data.TypedTableBase<CLIENTERow> {
            
            private global::System.Data.DataColumn columnCLI_ID;
            
            private global::System.Data.DataColumn columnCLI_USU_ID;
            
            private global::System.Data.DataColumn columnCLI_NOMBRE;
            
            private global::System.Data.DataColumn columnCLI_APE;
            
            private global::System.Data.DataColumn columnCLI_DNI;
            
            private global::System.Data.DataColumn columnCLI_TIPO_DOC;
            
            private global::System.Data.DataColumn columnCLI_MAIL;
            
            private global::System.Data.DataColumn columnCLI_TELEFONO;
            
            private global::System.Data.DataColumn columnCLI_CALLE;
            
            private global::System.Data.DataColumn columnCLI_PISO;
            
            private global::System.Data.DataColumn columnCLI_DEPTO;
            
            private global::System.Data.DataColumn columnCLI_LOCALIDAD;
            
            private global::System.Data.DataColumn columnCLI_COD_POSTAL;
            
            private global::System.Data.DataColumn columnCLI_FECHA_NAC;
            
            private global::System.Data.DataColumn columnCLI_CALLE_NRO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTEDataTable() {
                this.TableName = "CLIENTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CLIENTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_IDColumn {
                get {
                    return this.columnCLI_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_USU_IDColumn {
                get {
                    return this.columnCLI_USU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_NOMBREColumn {
                get {
                    return this.columnCLI_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_APEColumn {
                get {
                    return this.columnCLI_APE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_DNIColumn {
                get {
                    return this.columnCLI_DNI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_TIPO_DOCColumn {
                get {
                    return this.columnCLI_TIPO_DOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_MAILColumn {
                get {
                    return this.columnCLI_MAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_TELEFONOColumn {
                get {
                    return this.columnCLI_TELEFONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_CALLEColumn {
                get {
                    return this.columnCLI_CALLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_PISOColumn {
                get {
                    return this.columnCLI_PISO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_DEPTOColumn {
                get {
                    return this.columnCLI_DEPTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_LOCALIDADColumn {
                get {
                    return this.columnCLI_LOCALIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_COD_POSTALColumn {
                get {
                    return this.columnCLI_COD_POSTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_FECHA_NACColumn {
                get {
                    return this.columnCLI_FECHA_NAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLI_CALLE_NROColumn {
                get {
                    return this.columnCLI_CALLE_NRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow this[int index] {
                get {
                    return ((CLIENTERow)(this.Rows[index]));
                }
            }
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanging;
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanged;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleting;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCLIENTERow(CLIENTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow AddCLIENTERow(USUARIORow parentUSUARIORowByFK__CLIENTE__CLI_USU__182C9B23, string CLI_NOMBRE, string CLI_APE, int CLI_DNI, string CLI_TIPO_DOC, string CLI_MAIL, int CLI_TELEFONO, string CLI_CALLE, int CLI_PISO, string CLI_DEPTO, string CLI_LOCALIDAD, int CLI_COD_POSTAL, System.DateTime CLI_FECHA_NAC, int CLI_CALLE_NRO) {
                CLIENTERow rowCLIENTERow = ((CLIENTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CLI_NOMBRE,
                        CLI_APE,
                        CLI_DNI,
                        CLI_TIPO_DOC,
                        CLI_MAIL,
                        CLI_TELEFONO,
                        CLI_CALLE,
                        CLI_PISO,
                        CLI_DEPTO,
                        CLI_LOCALIDAD,
                        CLI_COD_POSTAL,
                        CLI_FECHA_NAC,
                        CLI_CALLE_NRO};
                if ((parentUSUARIORowByFK__CLIENTE__CLI_USU__182C9B23 != null)) {
                    columnValuesArray[1] = parentUSUARIORowByFK__CLIENTE__CLI_USU__182C9B23[0];
                }
                rowCLIENTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLIENTERow);
                return rowCLIENTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow FindByCLI_ID(int CLI_ID) {
                return ((CLIENTERow)(this.Rows.Find(new object[] {
                            CLI_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CLIENTEDataTable cln = ((CLIENTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLIENTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCLI_ID = base.Columns["CLI_ID"];
                this.columnCLI_USU_ID = base.Columns["CLI_USU_ID"];
                this.columnCLI_NOMBRE = base.Columns["CLI_NOMBRE"];
                this.columnCLI_APE = base.Columns["CLI_APE"];
                this.columnCLI_DNI = base.Columns["CLI_DNI"];
                this.columnCLI_TIPO_DOC = base.Columns["CLI_TIPO_DOC"];
                this.columnCLI_MAIL = base.Columns["CLI_MAIL"];
                this.columnCLI_TELEFONO = base.Columns["CLI_TELEFONO"];
                this.columnCLI_CALLE = base.Columns["CLI_CALLE"];
                this.columnCLI_PISO = base.Columns["CLI_PISO"];
                this.columnCLI_DEPTO = base.Columns["CLI_DEPTO"];
                this.columnCLI_LOCALIDAD = base.Columns["CLI_LOCALIDAD"];
                this.columnCLI_COD_POSTAL = base.Columns["CLI_COD_POSTAL"];
                this.columnCLI_FECHA_NAC = base.Columns["CLI_FECHA_NAC"];
                this.columnCLI_CALLE_NRO = base.Columns["CLI_CALLE_NRO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCLI_ID = new global::System.Data.DataColumn("CLI_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_ID);
                this.columnCLI_USU_ID = new global::System.Data.DataColumn("CLI_USU_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_USU_ID);
                this.columnCLI_NOMBRE = new global::System.Data.DataColumn("CLI_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_NOMBRE);
                this.columnCLI_APE = new global::System.Data.DataColumn("CLI_APE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_APE);
                this.columnCLI_DNI = new global::System.Data.DataColumn("CLI_DNI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_DNI);
                this.columnCLI_TIPO_DOC = new global::System.Data.DataColumn("CLI_TIPO_DOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_TIPO_DOC);
                this.columnCLI_MAIL = new global::System.Data.DataColumn("CLI_MAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_MAIL);
                this.columnCLI_TELEFONO = new global::System.Data.DataColumn("CLI_TELEFONO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_TELEFONO);
                this.columnCLI_CALLE = new global::System.Data.DataColumn("CLI_CALLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_CALLE);
                this.columnCLI_PISO = new global::System.Data.DataColumn("CLI_PISO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_PISO);
                this.columnCLI_DEPTO = new global::System.Data.DataColumn("CLI_DEPTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_DEPTO);
                this.columnCLI_LOCALIDAD = new global::System.Data.DataColumn("CLI_LOCALIDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_LOCALIDAD);
                this.columnCLI_COD_POSTAL = new global::System.Data.DataColumn("CLI_COD_POSTAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_COD_POSTAL);
                this.columnCLI_FECHA_NAC = new global::System.Data.DataColumn("CLI_FECHA_NAC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_FECHA_NAC);
                this.columnCLI_CALLE_NRO = new global::System.Data.DataColumn("CLI_CALLE_NRO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLI_CALLE_NRO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCLI_ID}, true));
                this.columnCLI_ID.AutoIncrement = true;
                this.columnCLI_ID.AutoIncrementSeed = -1;
                this.columnCLI_ID.AutoIncrementStep = -1;
                this.columnCLI_ID.AllowDBNull = false;
                this.columnCLI_ID.ReadOnly = true;
                this.columnCLI_ID.Unique = true;
                this.columnCLI_NOMBRE.MaxLength = 50;
                this.columnCLI_APE.MaxLength = 50;
                this.columnCLI_TIPO_DOC.MaxLength = 1;
                this.columnCLI_MAIL.MaxLength = 50;
                this.columnCLI_CALLE.MaxLength = 100;
                this.columnCLI_DEPTO.MaxLength = 1;
                this.columnCLI_LOCALIDAD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow NewCLIENTERow() {
                return ((CLIENTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLIENTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CLIENTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLIENTERowChanged != null)) {
                    this.CLIENTERowChanged(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLIENTERowChanging != null)) {
                    this.CLIENTERowChanging(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLIENTERowDeleted != null)) {
                    this.CLIENTERowDeleted(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLIENTERowDeleting != null)) {
                    this.CLIENTERowDeleting(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCLIENTERow(CLIENTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLIENTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPRESADataTable : global::System.Data.TypedTableBase<EMPRESARow> {
            
            private global::System.Data.DataColumn columnEMP_ID;
            
            private global::System.Data.DataColumn columnEMP_USU_ID;
            
            private global::System.Data.DataColumn columnEMP_RAZON_SOCIAL;
            
            private global::System.Data.DataColumn columnEMP_MAIL;
            
            private global::System.Data.DataColumn columnEMP_TELEFONO;
            
            private global::System.Data.DataColumn columnEMP_CALLE;
            
            private global::System.Data.DataColumn columnEMP_CALLE_NRO;
            
            private global::System.Data.DataColumn columnEMP_PISO;
            
            private global::System.Data.DataColumn columnEMP_DPTO;
            
            private global::System.Data.DataColumn columnEMP_LOCALIDAD;
            
            private global::System.Data.DataColumn columnEMP_COD_POSTAL;
            
            private global::System.Data.DataColumn columnEMP_CIUDAD;
            
            private global::System.Data.DataColumn columnEMP_CUIT;
            
            private global::System.Data.DataColumn columnEMP_NOM_CONTACTO;
            
            private global::System.Data.DataColumn columnEMP_FECHA_CREACION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESADataTable() {
                this.TableName = "EMPRESA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPRESADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EMPRESADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_IDColumn {
                get {
                    return this.columnEMP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_USU_IDColumn {
                get {
                    return this.columnEMP_USU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_RAZON_SOCIALColumn {
                get {
                    return this.columnEMP_RAZON_SOCIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_MAILColumn {
                get {
                    return this.columnEMP_MAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_TELEFONOColumn {
                get {
                    return this.columnEMP_TELEFONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_CALLEColumn {
                get {
                    return this.columnEMP_CALLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_CALLE_NROColumn {
                get {
                    return this.columnEMP_CALLE_NRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_PISOColumn {
                get {
                    return this.columnEMP_PISO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_DPTOColumn {
                get {
                    return this.columnEMP_DPTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_LOCALIDADColumn {
                get {
                    return this.columnEMP_LOCALIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_COD_POSTALColumn {
                get {
                    return this.columnEMP_COD_POSTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_CIUDADColumn {
                get {
                    return this.columnEMP_CIUDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_CUITColumn {
                get {
                    return this.columnEMP_CUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_NOM_CONTACTOColumn {
                get {
                    return this.columnEMP_NOM_CONTACTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_FECHA_CREACIONColumn {
                get {
                    return this.columnEMP_FECHA_CREACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow this[int index] {
                get {
                    return ((EMPRESARow)(this.Rows[index]));
                }
            }
            
            public event EMPRESARowChangeEventHandler EMPRESARowChanging;
            
            public event EMPRESARowChangeEventHandler EMPRESARowChanged;
            
            public event EMPRESARowChangeEventHandler EMPRESARowDeleting;
            
            public event EMPRESARowChangeEventHandler EMPRESARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEMPRESARow(EMPRESARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow AddEMPRESARow(USUARIORow parentUSUARIORowByFK__EMPRESA__EMP_USU__21B6055D, string EMP_RAZON_SOCIAL, string EMP_MAIL, int EMP_TELEFONO, string EMP_CALLE, int EMP_CALLE_NRO, int EMP_PISO, string EMP_DPTO, string EMP_LOCALIDAD, int EMP_COD_POSTAL, string EMP_CIUDAD, string EMP_CUIT, string EMP_NOM_CONTACTO, System.DateTime EMP_FECHA_CREACION) {
                EMPRESARow rowEMPRESARow = ((EMPRESARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        EMP_RAZON_SOCIAL,
                        EMP_MAIL,
                        EMP_TELEFONO,
                        EMP_CALLE,
                        EMP_CALLE_NRO,
                        EMP_PISO,
                        EMP_DPTO,
                        EMP_LOCALIDAD,
                        EMP_COD_POSTAL,
                        EMP_CIUDAD,
                        EMP_CUIT,
                        EMP_NOM_CONTACTO,
                        EMP_FECHA_CREACION};
                if ((parentUSUARIORowByFK__EMPRESA__EMP_USU__21B6055D != null)) {
                    columnValuesArray[1] = parentUSUARIORowByFK__EMPRESA__EMP_USU__21B6055D[0];
                }
                rowEMPRESARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPRESARow);
                return rowEMPRESARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow FindByEMP_ID(int EMP_ID) {
                return ((EMPRESARow)(this.Rows.Find(new object[] {
                            EMP_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EMPRESADataTable cln = ((EMPRESADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPRESADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMP_ID = base.Columns["EMP_ID"];
                this.columnEMP_USU_ID = base.Columns["EMP_USU_ID"];
                this.columnEMP_RAZON_SOCIAL = base.Columns["EMP_RAZON_SOCIAL"];
                this.columnEMP_MAIL = base.Columns["EMP_MAIL"];
                this.columnEMP_TELEFONO = base.Columns["EMP_TELEFONO"];
                this.columnEMP_CALLE = base.Columns["EMP_CALLE"];
                this.columnEMP_CALLE_NRO = base.Columns["EMP_CALLE_NRO"];
                this.columnEMP_PISO = base.Columns["EMP_PISO"];
                this.columnEMP_DPTO = base.Columns["EMP_DPTO"];
                this.columnEMP_LOCALIDAD = base.Columns["EMP_LOCALIDAD"];
                this.columnEMP_COD_POSTAL = base.Columns["EMP_COD_POSTAL"];
                this.columnEMP_CIUDAD = base.Columns["EMP_CIUDAD"];
                this.columnEMP_CUIT = base.Columns["EMP_CUIT"];
                this.columnEMP_NOM_CONTACTO = base.Columns["EMP_NOM_CONTACTO"];
                this.columnEMP_FECHA_CREACION = base.Columns["EMP_FECHA_CREACION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMP_ID = new global::System.Data.DataColumn("EMP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_ID);
                this.columnEMP_USU_ID = new global::System.Data.DataColumn("EMP_USU_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_USU_ID);
                this.columnEMP_RAZON_SOCIAL = new global::System.Data.DataColumn("EMP_RAZON_SOCIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_RAZON_SOCIAL);
                this.columnEMP_MAIL = new global::System.Data.DataColumn("EMP_MAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_MAIL);
                this.columnEMP_TELEFONO = new global::System.Data.DataColumn("EMP_TELEFONO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_TELEFONO);
                this.columnEMP_CALLE = new global::System.Data.DataColumn("EMP_CALLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_CALLE);
                this.columnEMP_CALLE_NRO = new global::System.Data.DataColumn("EMP_CALLE_NRO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_CALLE_NRO);
                this.columnEMP_PISO = new global::System.Data.DataColumn("EMP_PISO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_PISO);
                this.columnEMP_DPTO = new global::System.Data.DataColumn("EMP_DPTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_DPTO);
                this.columnEMP_LOCALIDAD = new global::System.Data.DataColumn("EMP_LOCALIDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_LOCALIDAD);
                this.columnEMP_COD_POSTAL = new global::System.Data.DataColumn("EMP_COD_POSTAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_COD_POSTAL);
                this.columnEMP_CIUDAD = new global::System.Data.DataColumn("EMP_CIUDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_CIUDAD);
                this.columnEMP_CUIT = new global::System.Data.DataColumn("EMP_CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_CUIT);
                this.columnEMP_NOM_CONTACTO = new global::System.Data.DataColumn("EMP_NOM_CONTACTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_NOM_CONTACTO);
                this.columnEMP_FECHA_CREACION = new global::System.Data.DataColumn("EMP_FECHA_CREACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_FECHA_CREACION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMP_ID}, true));
                this.columnEMP_ID.AutoIncrement = true;
                this.columnEMP_ID.AutoIncrementSeed = -1;
                this.columnEMP_ID.AutoIncrementStep = -1;
                this.columnEMP_ID.AllowDBNull = false;
                this.columnEMP_ID.ReadOnly = true;
                this.columnEMP_ID.Unique = true;
                this.columnEMP_RAZON_SOCIAL.MaxLength = 50;
                this.columnEMP_MAIL.MaxLength = 50;
                this.columnEMP_CALLE.MaxLength = 50;
                this.columnEMP_DPTO.MaxLength = 1;
                this.columnEMP_LOCALIDAD.MaxLength = 50;
                this.columnEMP_CIUDAD.MaxLength = 50;
                this.columnEMP_CUIT.MaxLength = 15;
                this.columnEMP_NOM_CONTACTO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow NewEMPRESARow() {
                return ((EMPRESARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPRESARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EMPRESARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPRESARowChanged != null)) {
                    this.EMPRESARowChanged(this, new EMPRESARowChangeEvent(((EMPRESARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPRESARowChanging != null)) {
                    this.EMPRESARowChanging(this, new EMPRESARowChangeEvent(((EMPRESARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPRESARowDeleted != null)) {
                    this.EMPRESARowDeleted(this, new EMPRESARowChangeEvent(((EMPRESARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPRESARowDeleting != null)) {
                    this.EMPRESARowDeleting(this, new EMPRESARowChangeEvent(((EMPRESARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEMPRESARow(EMPRESARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPRESADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FUNCIONALIDADDataTable : global::System.Data.TypedTableBase<FUNCIONALIDADRow> {
            
            private global::System.Data.DataColumn columnFUN_ID;
            
            private global::System.Data.DataColumn columnFUN_NOMBRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADDataTable() {
                this.TableName = "FUNCIONALIDAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FUNCIONALIDADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FUNCIONALIDADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FUN_IDColumn {
                get {
                    return this.columnFUN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FUN_NOMBREColumn {
                get {
                    return this.columnFUN_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow this[int index] {
                get {
                    return ((FUNCIONALIDADRow)(this.Rows[index]));
                }
            }
            
            public event FUNCIONALIDADRowChangeEventHandler FUNCIONALIDADRowChanging;
            
            public event FUNCIONALIDADRowChangeEventHandler FUNCIONALIDADRowChanged;
            
            public event FUNCIONALIDADRowChangeEventHandler FUNCIONALIDADRowDeleting;
            
            public event FUNCIONALIDADRowChangeEventHandler FUNCIONALIDADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFUNCIONALIDADRow(FUNCIONALIDADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow AddFUNCIONALIDADRow(int FUN_ID, string FUN_NOMBRE) {
                FUNCIONALIDADRow rowFUNCIONALIDADRow = ((FUNCIONALIDADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FUN_ID,
                        FUN_NOMBRE};
                rowFUNCIONALIDADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFUNCIONALIDADRow);
                return rowFUNCIONALIDADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow FindByFUN_ID(int FUN_ID) {
                return ((FUNCIONALIDADRow)(this.Rows.Find(new object[] {
                            FUN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FUNCIONALIDADDataTable cln = ((FUNCIONALIDADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FUNCIONALIDADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFUN_ID = base.Columns["FUN_ID"];
                this.columnFUN_NOMBRE = base.Columns["FUN_NOMBRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFUN_ID = new global::System.Data.DataColumn("FUN_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUN_ID);
                this.columnFUN_NOMBRE = new global::System.Data.DataColumn("FUN_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUN_NOMBRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFUN_ID}, true));
                this.columnFUN_ID.AllowDBNull = false;
                this.columnFUN_ID.Unique = true;
                this.columnFUN_NOMBRE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow NewFUNCIONALIDADRow() {
                return ((FUNCIONALIDADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FUNCIONALIDADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FUNCIONALIDADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FUNCIONALIDADRowChanged != null)) {
                    this.FUNCIONALIDADRowChanged(this, new FUNCIONALIDADRowChangeEvent(((FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FUNCIONALIDADRowChanging != null)) {
                    this.FUNCIONALIDADRowChanging(this, new FUNCIONALIDADRowChangeEvent(((FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FUNCIONALIDADRowDeleted != null)) {
                    this.FUNCIONALIDADRowDeleted(this, new FUNCIONALIDADRowChangeEvent(((FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FUNCIONALIDADRowDeleting != null)) {
                    this.FUNCIONALIDADRowDeleting(this, new FUNCIONALIDADRowChangeEvent(((FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFUNCIONALIDADRow(FUNCIONALIDADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FUNCIONALIDADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROLDataTable : global::System.Data.TypedTableBase<ROLRow> {
            
            private global::System.Data.DataColumn columnROL_ID;
            
            private global::System.Data.DataColumn columnROL_NOMBRE;
            
            private global::System.Data.DataColumn columnROL_BAJA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLDataTable() {
                this.TableName = "ROL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ROLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_IDColumn {
                get {
                    return this.columnROL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_NOMBREColumn {
                get {
                    return this.columnROL_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_BAJAColumn {
                get {
                    return this.columnROL_BAJA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow this[int index] {
                get {
                    return ((ROLRow)(this.Rows[index]));
                }
            }
            
            public event ROLRowChangeEventHandler ROLRowChanging;
            
            public event ROLRowChangeEventHandler ROLRowChanged;
            
            public event ROLRowChangeEventHandler ROLRowDeleting;
            
            public event ROLRowChangeEventHandler ROLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddROLRow(ROLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow AddROLRow(string ROL_NOMBRE, bool ROL_BAJA) {
                ROLRow rowROLRow = ((ROLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ROL_NOMBRE,
                        ROL_BAJA};
                rowROLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROLRow);
                return rowROLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow FindByROL_ID(int ROL_ID) {
                return ((ROLRow)(this.Rows.Find(new object[] {
                            ROL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ROLDataTable cln = ((ROLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnROL_ID = base.Columns["ROL_ID"];
                this.columnROL_NOMBRE = base.Columns["ROL_NOMBRE"];
                this.columnROL_BAJA = base.Columns["ROL_BAJA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnROL_ID = new global::System.Data.DataColumn("ROL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_ID);
                this.columnROL_NOMBRE = new global::System.Data.DataColumn("ROL_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_NOMBRE);
                this.columnROL_BAJA = new global::System.Data.DataColumn("ROL_BAJA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_BAJA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnROL_ID}, true));
                this.columnROL_ID.AutoIncrement = true;
                this.columnROL_ID.AutoIncrementSeed = -1;
                this.columnROL_ID.AutoIncrementStep = -1;
                this.columnROL_ID.AllowDBNull = false;
                this.columnROL_ID.ReadOnly = true;
                this.columnROL_ID.Unique = true;
                this.columnROL_NOMBRE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow NewROLRow() {
                return ((ROLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ROLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROLRowChanged != null)) {
                    this.ROLRowChanged(this, new ROLRowChangeEvent(((ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROLRowChanging != null)) {
                    this.ROLRowChanging(this, new ROLRowChangeEvent(((ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROLRowDeleted != null)) {
                    this.ROLRowDeleted(this, new ROLRowChangeEvent(((ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROLRowDeleting != null)) {
                    this.ROLRowDeleting(this, new ROLRowChangeEvent(((ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveROLRow(ROLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROL_FUNCIONALIDADDataTable : global::System.Data.TypedTableBase<ROL_FUNCIONALIDADRow> {
            
            private global::System.Data.DataColumn columnROL_FUN_ROL;
            
            private global::System.Data.DataColumn columnROL_FUN_FUN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADDataTable() {
                this.TableName = "ROL_FUNCIONALIDAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROL_FUNCIONALIDADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ROL_FUNCIONALIDADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_FUN_ROLColumn {
                get {
                    return this.columnROL_FUN_ROL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_FUN_FUNColumn {
                get {
                    return this.columnROL_FUN_FUN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow this[int index] {
                get {
                    return ((ROL_FUNCIONALIDADRow)(this.Rows[index]));
                }
            }
            
            public event ROL_FUNCIONALIDADRowChangeEventHandler ROL_FUNCIONALIDADRowChanging;
            
            public event ROL_FUNCIONALIDADRowChangeEventHandler ROL_FUNCIONALIDADRowChanged;
            
            public event ROL_FUNCIONALIDADRowChangeEventHandler ROL_FUNCIONALIDADRowDeleting;
            
            public event ROL_FUNCIONALIDADRowChangeEventHandler ROL_FUNCIONALIDADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddROL_FUNCIONALIDADRow(ROL_FUNCIONALIDADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow AddROL_FUNCIONALIDADRow(ROLRow parentROLRowByFK__ROL_FUNCI__ROL_F__1273C1CD, FUNCIONALIDADRow parentFUNCIONALIDADRowByFK__ROL_FUNCI__ROL_F__1367E606) {
                ROL_FUNCIONALIDADRow rowROL_FUNCIONALIDADRow = ((ROL_FUNCIONALIDADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentROLRowByFK__ROL_FUNCI__ROL_F__1273C1CD != null)) {
                    columnValuesArray[0] = parentROLRowByFK__ROL_FUNCI__ROL_F__1273C1CD[0];
                }
                if ((parentFUNCIONALIDADRowByFK__ROL_FUNCI__ROL_F__1367E606 != null)) {
                    columnValuesArray[1] = parentFUNCIONALIDADRowByFK__ROL_FUNCI__ROL_F__1367E606[0];
                }
                rowROL_FUNCIONALIDADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROL_FUNCIONALIDADRow);
                return rowROL_FUNCIONALIDADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow FindByROL_FUN_ROLROL_FUN_FUN(int ROL_FUN_ROL, int ROL_FUN_FUN) {
                return ((ROL_FUNCIONALIDADRow)(this.Rows.Find(new object[] {
                            ROL_FUN_ROL,
                            ROL_FUN_FUN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ROL_FUNCIONALIDADDataTable cln = ((ROL_FUNCIONALIDADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROL_FUNCIONALIDADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnROL_FUN_ROL = base.Columns["ROL_FUN_ROL"];
                this.columnROL_FUN_FUN = base.Columns["ROL_FUN_FUN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnROL_FUN_ROL = new global::System.Data.DataColumn("ROL_FUN_ROL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_FUN_ROL);
                this.columnROL_FUN_FUN = new global::System.Data.DataColumn("ROL_FUN_FUN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_FUN_FUN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnROL_FUN_ROL,
                                this.columnROL_FUN_FUN}, true));
                this.columnROL_FUN_ROL.AllowDBNull = false;
                this.columnROL_FUN_FUN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow NewROL_FUNCIONALIDADRow() {
                return ((ROL_FUNCIONALIDADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROL_FUNCIONALIDADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ROL_FUNCIONALIDADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROL_FUNCIONALIDADRowChanged != null)) {
                    this.ROL_FUNCIONALIDADRowChanged(this, new ROL_FUNCIONALIDADRowChangeEvent(((ROL_FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROL_FUNCIONALIDADRowChanging != null)) {
                    this.ROL_FUNCIONALIDADRowChanging(this, new ROL_FUNCIONALIDADRowChangeEvent(((ROL_FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROL_FUNCIONALIDADRowDeleted != null)) {
                    this.ROL_FUNCIONALIDADRowDeleted(this, new ROL_FUNCIONALIDADRowChangeEvent(((ROL_FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROL_FUNCIONALIDADRowDeleting != null)) {
                    this.ROL_FUNCIONALIDADRowDeleting(this, new ROL_FUNCIONALIDADRowChangeEvent(((ROL_FUNCIONALIDADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveROL_FUNCIONALIDADRow(ROL_FUNCIONALIDADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROL_FUNCIONALIDADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class USUARIODataTable : global::System.Data.TypedTableBase<USUARIORow> {
            
            private global::System.Data.DataColumn columnUSU_ID;
            
            private global::System.Data.DataColumn columnUSU_USERNAME;
            
            private global::System.Data.DataColumn columnUSU_PASSWORD;
            
            private global::System.Data.DataColumn columnUSU_INTENTOS_LOGIN;
            
            private global::System.Data.DataColumn columnUSU_TIPO;
            
            private global::System.Data.DataColumn columnUSU_BAJA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIODataTable() {
                this.TableName = "USUARIO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected USUARIODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_IDColumn {
                get {
                    return this.columnUSU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_USERNAMEColumn {
                get {
                    return this.columnUSU_USERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_PASSWORDColumn {
                get {
                    return this.columnUSU_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_INTENTOS_LOGINColumn {
                get {
                    return this.columnUSU_INTENTOS_LOGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_TIPOColumn {
                get {
                    return this.columnUSU_TIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_BAJAColumn {
                get {
                    return this.columnUSU_BAJA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow this[int index] {
                get {
                    return ((USUARIORow)(this.Rows[index]));
                }
            }
            
            public event USUARIORowChangeEventHandler USUARIORowChanging;
            
            public event USUARIORowChangeEventHandler USUARIORowChanged;
            
            public event USUARIORowChangeEventHandler USUARIORowDeleting;
            
            public event USUARIORowChangeEventHandler USUARIORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUSUARIORow(USUARIORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow AddUSUARIORow(string USU_USERNAME, string USU_PASSWORD, int USU_INTENTOS_LOGIN, string USU_TIPO, bool USU_BAJA) {
                USUARIORow rowUSUARIORow = ((USUARIORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USU_USERNAME,
                        USU_PASSWORD,
                        USU_INTENTOS_LOGIN,
                        USU_TIPO,
                        USU_BAJA};
                rowUSUARIORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUSUARIORow);
                return rowUSUARIORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow FindByUSU_ID(int USU_ID) {
                return ((USUARIORow)(this.Rows.Find(new object[] {
                            USU_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                USUARIODataTable cln = ((USUARIODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new USUARIODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSU_ID = base.Columns["USU_ID"];
                this.columnUSU_USERNAME = base.Columns["USU_USERNAME"];
                this.columnUSU_PASSWORD = base.Columns["USU_PASSWORD"];
                this.columnUSU_INTENTOS_LOGIN = base.Columns["USU_INTENTOS_LOGIN"];
                this.columnUSU_TIPO = base.Columns["USU_TIPO"];
                this.columnUSU_BAJA = base.Columns["USU_BAJA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSU_ID = new global::System.Data.DataColumn("USU_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_ID);
                this.columnUSU_USERNAME = new global::System.Data.DataColumn("USU_USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_USERNAME);
                this.columnUSU_PASSWORD = new global::System.Data.DataColumn("USU_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_PASSWORD);
                this.columnUSU_INTENTOS_LOGIN = new global::System.Data.DataColumn("USU_INTENTOS_LOGIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_INTENTOS_LOGIN);
                this.columnUSU_TIPO = new global::System.Data.DataColumn("USU_TIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_TIPO);
                this.columnUSU_BAJA = new global::System.Data.DataColumn("USU_BAJA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_BAJA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSU_ID}, true));
                this.columnUSU_ID.AutoIncrement = true;
                this.columnUSU_ID.AutoIncrementSeed = -1;
                this.columnUSU_ID.AutoIncrementStep = -1;
                this.columnUSU_ID.AllowDBNull = false;
                this.columnUSU_ID.ReadOnly = true;
                this.columnUSU_ID.Unique = true;
                this.columnUSU_USERNAME.MaxLength = 50;
                this.columnUSU_PASSWORD.MaxLength = 50;
                this.columnUSU_TIPO.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow NewUSUARIORow() {
                return ((USUARIORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new USUARIORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(USUARIORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.USUARIORowChanged != null)) {
                    this.USUARIORowChanged(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.USUARIORowChanging != null)) {
                    this.USUARIORowChanging(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.USUARIORowDeleted != null)) {
                    this.USUARIORowDeleted(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.USUARIORowDeleting != null)) {
                    this.USUARIORowDeleting(this, new USUARIORowChangeEvent(((USUARIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUSUARIORow(USUARIORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "USUARIODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class USUARIO_ROLDataTable : global::System.Data.TypedTableBase<USUARIO_ROLRow> {
            
            private global::System.Data.DataColumn columnUSU_ROL_USUARIO_ID;
            
            private global::System.Data.DataColumn columnUSU_ROL_ROL_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLDataTable() {
                this.TableName = "USUARIO_ROL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIO_ROLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected USUARIO_ROLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_ROL_USUARIO_IDColumn {
                get {
                    return this.columnUSU_ROL_USUARIO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USU_ROL_ROL_IDColumn {
                get {
                    return this.columnUSU_ROL_ROL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow this[int index] {
                get {
                    return ((USUARIO_ROLRow)(this.Rows[index]));
                }
            }
            
            public event USUARIO_ROLRowChangeEventHandler USUARIO_ROLRowChanging;
            
            public event USUARIO_ROLRowChangeEventHandler USUARIO_ROLRowChanged;
            
            public event USUARIO_ROLRowChangeEventHandler USUARIO_ROLRowDeleting;
            
            public event USUARIO_ROLRowChangeEventHandler USUARIO_ROLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUSUARIO_ROLRow(USUARIO_ROLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow AddUSUARIO_ROLRow(USUARIORow parentUSUARIORowByFK__USUARIO_R__USU_R__08EA5793, ROLRow parentROLRowByFK__USUARIO_R__USU_R__09DE7BCC) {
                USUARIO_ROLRow rowUSUARIO_ROLRow = ((USUARIO_ROLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentUSUARIORowByFK__USUARIO_R__USU_R__08EA5793 != null)) {
                    columnValuesArray[0] = parentUSUARIORowByFK__USUARIO_R__USU_R__08EA5793[0];
                }
                if ((parentROLRowByFK__USUARIO_R__USU_R__09DE7BCC != null)) {
                    columnValuesArray[1] = parentROLRowByFK__USUARIO_R__USU_R__09DE7BCC[0];
                }
                rowUSUARIO_ROLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUSUARIO_ROLRow);
                return rowUSUARIO_ROLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow FindByUSU_ROL_USUARIO_IDUSU_ROL_ROL_ID(int USU_ROL_USUARIO_ID, int USU_ROL_ROL_ID) {
                return ((USUARIO_ROLRow)(this.Rows.Find(new object[] {
                            USU_ROL_USUARIO_ID,
                            USU_ROL_ROL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                USUARIO_ROLDataTable cln = ((USUARIO_ROLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new USUARIO_ROLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSU_ROL_USUARIO_ID = base.Columns["USU_ROL_USUARIO_ID"];
                this.columnUSU_ROL_ROL_ID = base.Columns["USU_ROL_ROL_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSU_ROL_USUARIO_ID = new global::System.Data.DataColumn("USU_ROL_USUARIO_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_ROL_USUARIO_ID);
                this.columnUSU_ROL_ROL_ID = new global::System.Data.DataColumn("USU_ROL_ROL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSU_ROL_ROL_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSU_ROL_USUARIO_ID,
                                this.columnUSU_ROL_ROL_ID}, true));
                this.columnUSU_ROL_USUARIO_ID.AllowDBNull = false;
                this.columnUSU_ROL_ROL_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow NewUSUARIO_ROLRow() {
                return ((USUARIO_ROLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new USUARIO_ROLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(USUARIO_ROLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.USUARIO_ROLRowChanged != null)) {
                    this.USUARIO_ROLRowChanged(this, new USUARIO_ROLRowChangeEvent(((USUARIO_ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.USUARIO_ROLRowChanging != null)) {
                    this.USUARIO_ROLRowChanging(this, new USUARIO_ROLRowChangeEvent(((USUARIO_ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.USUARIO_ROLRowDeleted != null)) {
                    this.USUARIO_ROLRowDeleted(this, new USUARIO_ROLRowChangeEvent(((USUARIO_ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.USUARIO_ROLRowDeleting != null)) {
                    this.USUARIO_ROLRowDeleting(this, new USUARIO_ROLRowChangeEvent(((USUARIO_ROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUSUARIO_ROLRow(USUARIO_ROLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "USUARIO_ROLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CLIENTERow : global::System.Data.DataRow {
            
            private CLIENTEDataTable tableCLIENTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLIENTE = ((CLIENTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_ID {
                get {
                    return ((int)(this[this.tableCLIENTE.CLI_IDColumn]));
                }
                set {
                    this[this.tableCLIENTE.CLI_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_USU_ID {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_USU_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_USU_ID\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_USU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_NOMBRE\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_APE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_APEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_APE\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_APEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_DNI {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_DNIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_DNI\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_DNIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_TIPO_DOC {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_TIPO_DOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_TIPO_DOC\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_TIPO_DOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_MAIL {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_MAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_MAIL\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_MAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_TELEFONO {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_TELEFONOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_TELEFONO\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_TELEFONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_CALLE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_CALLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_CALLE\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_CALLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_PISO {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_PISOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_PISO\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_PISOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_DEPTO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_DEPTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_DEPTO\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_DEPTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLI_LOCALIDAD {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CLI_LOCALIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_LOCALIDAD\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_LOCALIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_COD_POSTAL {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_COD_POSTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_COD_POSTAL\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_COD_POSTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CLI_FECHA_NAC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCLIENTE.CLI_FECHA_NACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_FECHA_NAC\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_FECHA_NACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLI_CALLE_NRO {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.CLI_CALLE_NROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CLI_CALLE_NRO\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CLI_CALLE_NROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK__CLIENTE__CLI_USU__182C9B23"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__CLIENTE__CLI_USU__182C9B23"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_USU_IDNull() {
                return this.IsNull(this.tableCLIENTE.CLI_USU_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_USU_IDNull() {
                this[this.tableCLIENTE.CLI_USU_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_NOMBRENull() {
                return this.IsNull(this.tableCLIENTE.CLI_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_NOMBRENull() {
                this[this.tableCLIENTE.CLI_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_APENull() {
                return this.IsNull(this.tableCLIENTE.CLI_APEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_APENull() {
                this[this.tableCLIENTE.CLI_APEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_DNINull() {
                return this.IsNull(this.tableCLIENTE.CLI_DNIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_DNINull() {
                this[this.tableCLIENTE.CLI_DNIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_TIPO_DOCNull() {
                return this.IsNull(this.tableCLIENTE.CLI_TIPO_DOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_TIPO_DOCNull() {
                this[this.tableCLIENTE.CLI_TIPO_DOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_MAILNull() {
                return this.IsNull(this.tableCLIENTE.CLI_MAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_MAILNull() {
                this[this.tableCLIENTE.CLI_MAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_TELEFONONull() {
                return this.IsNull(this.tableCLIENTE.CLI_TELEFONOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_TELEFONONull() {
                this[this.tableCLIENTE.CLI_TELEFONOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_CALLENull() {
                return this.IsNull(this.tableCLIENTE.CLI_CALLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_CALLENull() {
                this[this.tableCLIENTE.CLI_CALLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_PISONull() {
                return this.IsNull(this.tableCLIENTE.CLI_PISOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_PISONull() {
                this[this.tableCLIENTE.CLI_PISOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_DEPTONull() {
                return this.IsNull(this.tableCLIENTE.CLI_DEPTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_DEPTONull() {
                this[this.tableCLIENTE.CLI_DEPTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_LOCALIDADNull() {
                return this.IsNull(this.tableCLIENTE.CLI_LOCALIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_LOCALIDADNull() {
                this[this.tableCLIENTE.CLI_LOCALIDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_COD_POSTALNull() {
                return this.IsNull(this.tableCLIENTE.CLI_COD_POSTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_COD_POSTALNull() {
                this[this.tableCLIENTE.CLI_COD_POSTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_FECHA_NACNull() {
                return this.IsNull(this.tableCLIENTE.CLI_FECHA_NACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_FECHA_NACNull() {
                this[this.tableCLIENTE.CLI_FECHA_NACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLI_CALLE_NRONull() {
                return this.IsNull(this.tableCLIENTE.CLI_CALLE_NROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLI_CALLE_NRONull() {
                this[this.tableCLIENTE.CLI_CALLE_NROColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EMPRESARow : global::System.Data.DataRow {
            
            private EMPRESADataTable tableEMPRESA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPRESARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPRESA = ((EMPRESADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_ID {
                get {
                    return ((int)(this[this.tableEMPRESA.EMP_IDColumn]));
                }
                set {
                    this[this.tableEMPRESA.EMP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_USU_ID {
                get {
                    try {
                        return ((int)(this[this.tableEMPRESA.EMP_USU_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_USU_ID\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_USU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_RAZON_SOCIAL {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_RAZON_SOCIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_RAZON_SOCIAL\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_RAZON_SOCIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_MAIL {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_MAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_MAIL\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_MAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_TELEFONO {
                get {
                    try {
                        return ((int)(this[this.tableEMPRESA.EMP_TELEFONOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_TELEFONO\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_TELEFONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_CALLE {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_CALLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_CALLE\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_CALLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_CALLE_NRO {
                get {
                    try {
                        return ((int)(this[this.tableEMPRESA.EMP_CALLE_NROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_CALLE_NRO\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_CALLE_NROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_PISO {
                get {
                    try {
                        return ((int)(this[this.tableEMPRESA.EMP_PISOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_PISO\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_PISOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_DPTO {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_DPTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_DPTO\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_DPTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_LOCALIDAD {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_LOCALIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_LOCALIDAD\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_LOCALIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMP_COD_POSTAL {
                get {
                    try {
                        return ((int)(this[this.tableEMPRESA.EMP_COD_POSTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_COD_POSTAL\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_COD_POSTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_CIUDAD {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_CIUDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_CIUDAD\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_CIUDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_CUIT {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_CUITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_CUIT\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMP_NOM_CONTACTO {
                get {
                    try {
                        return ((string)(this[this.tableEMPRESA.EMP_NOM_CONTACTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_NOM_CONTACTO\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_NOM_CONTACTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMP_FECHA_CREACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPRESA.EMP_FECHA_CREACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EMP_FECHA_CREACION\' de la tabla \'EMPRESA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPRESA.EMP_FECHA_CREACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK__EMPRESA__EMP_USU__21B6055D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__EMPRESA__EMP_USU__21B6055D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_USU_IDNull() {
                return this.IsNull(this.tableEMPRESA.EMP_USU_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_USU_IDNull() {
                this[this.tableEMPRESA.EMP_USU_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_RAZON_SOCIALNull() {
                return this.IsNull(this.tableEMPRESA.EMP_RAZON_SOCIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_RAZON_SOCIALNull() {
                this[this.tableEMPRESA.EMP_RAZON_SOCIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_MAILNull() {
                return this.IsNull(this.tableEMPRESA.EMP_MAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_MAILNull() {
                this[this.tableEMPRESA.EMP_MAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_TELEFONONull() {
                return this.IsNull(this.tableEMPRESA.EMP_TELEFONOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_TELEFONONull() {
                this[this.tableEMPRESA.EMP_TELEFONOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_CALLENull() {
                return this.IsNull(this.tableEMPRESA.EMP_CALLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_CALLENull() {
                this[this.tableEMPRESA.EMP_CALLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_CALLE_NRONull() {
                return this.IsNull(this.tableEMPRESA.EMP_CALLE_NROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_CALLE_NRONull() {
                this[this.tableEMPRESA.EMP_CALLE_NROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_PISONull() {
                return this.IsNull(this.tableEMPRESA.EMP_PISOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_PISONull() {
                this[this.tableEMPRESA.EMP_PISOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_DPTONull() {
                return this.IsNull(this.tableEMPRESA.EMP_DPTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_DPTONull() {
                this[this.tableEMPRESA.EMP_DPTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_LOCALIDADNull() {
                return this.IsNull(this.tableEMPRESA.EMP_LOCALIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_LOCALIDADNull() {
                this[this.tableEMPRESA.EMP_LOCALIDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_COD_POSTALNull() {
                return this.IsNull(this.tableEMPRESA.EMP_COD_POSTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_COD_POSTALNull() {
                this[this.tableEMPRESA.EMP_COD_POSTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_CIUDADNull() {
                return this.IsNull(this.tableEMPRESA.EMP_CIUDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_CIUDADNull() {
                this[this.tableEMPRESA.EMP_CIUDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_CUITNull() {
                return this.IsNull(this.tableEMPRESA.EMP_CUITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_CUITNull() {
                this[this.tableEMPRESA.EMP_CUITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_NOM_CONTACTONull() {
                return this.IsNull(this.tableEMPRESA.EMP_NOM_CONTACTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_NOM_CONTACTONull() {
                this[this.tableEMPRESA.EMP_NOM_CONTACTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_FECHA_CREACIONNull() {
                return this.IsNull(this.tableEMPRESA.EMP_FECHA_CREACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_FECHA_CREACIONNull() {
                this[this.tableEMPRESA.EMP_FECHA_CREACIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FUNCIONALIDADRow : global::System.Data.DataRow {
            
            private FUNCIONALIDADDataTable tableFUNCIONALIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FUNCIONALIDADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFUNCIONALIDAD = ((FUNCIONALIDADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FUN_ID {
                get {
                    return ((int)(this[this.tableFUNCIONALIDAD.FUN_IDColumn]));
                }
                set {
                    this[this.tableFUNCIONALIDAD.FUN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FUN_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableFUNCIONALIDAD.FUN_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FUN_NOMBRE\' de la tabla \'FUNCIONALIDAD\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNCIONALIDAD.FUN_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFUN_NOMBRENull() {
                return this.IsNull(this.tableFUNCIONALIDAD.FUN_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFUN_NOMBRENull() {
                this[this.tableFUNCIONALIDAD.FUN_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow[] GetROL_FUNCIONALIDADRows() {
                if ((this.Table.ChildRelations["FK__ROL_FUNCI__ROL_F__1367E606"] == null)) {
                    return new ROL_FUNCIONALIDADRow[0];
                }
                else {
                    return ((ROL_FUNCIONALIDADRow[])(base.GetChildRows(this.Table.ChildRelations["FK__ROL_FUNCI__ROL_F__1367E606"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ROLRow : global::System.Data.DataRow {
            
            private ROLDataTable tableROL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROL = ((ROLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ROL_ID {
                get {
                    return ((int)(this[this.tableROL.ROL_IDColumn]));
                }
                set {
                    this[this.tableROL.ROL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROL_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableROL.ROL_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ROL_NOMBRE\' de la tabla \'ROL\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableROL.ROL_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ROL_BAJA {
                get {
                    try {
                        return ((bool)(this[this.tableROL.ROL_BAJAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ROL_BAJA\' de la tabla \'ROL\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableROL.ROL_BAJAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROL_NOMBRENull() {
                return this.IsNull(this.tableROL.ROL_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROL_NOMBRENull() {
                this[this.tableROL.ROL_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROL_BAJANull() {
                return this.IsNull(this.tableROL.ROL_BAJAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROL_BAJANull() {
                this[this.tableROL.ROL_BAJAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow[] GetROL_FUNCIONALIDADRows() {
                if ((this.Table.ChildRelations["FK__ROL_FUNCI__ROL_F__1273C1CD"] == null)) {
                    return new ROL_FUNCIONALIDADRow[0];
                }
                else {
                    return ((ROL_FUNCIONALIDADRow[])(base.GetChildRows(this.Table.ChildRelations["FK__ROL_FUNCI__ROL_F__1273C1CD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow[] GetUSUARIO_ROLRows() {
                if ((this.Table.ChildRelations["FK__USUARIO_R__USU_R__09DE7BCC"] == null)) {
                    return new USUARIO_ROLRow[0];
                }
                else {
                    return ((USUARIO_ROLRow[])(base.GetChildRows(this.Table.ChildRelations["FK__USUARIO_R__USU_R__09DE7BCC"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ROL_FUNCIONALIDADRow : global::System.Data.DataRow {
            
            private ROL_FUNCIONALIDADDataTable tableROL_FUNCIONALIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROL_FUNCIONALIDADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROL_FUNCIONALIDAD = ((ROL_FUNCIONALIDADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ROL_FUN_ROL {
                get {
                    return ((int)(this[this.tableROL_FUNCIONALIDAD.ROL_FUN_ROLColumn]));
                }
                set {
                    this[this.tableROL_FUNCIONALIDAD.ROL_FUN_ROLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ROL_FUN_FUN {
                get {
                    return ((int)(this[this.tableROL_FUNCIONALIDAD.ROL_FUN_FUNColumn]));
                }
                set {
                    this[this.tableROL_FUNCIONALIDAD.ROL_FUN_FUNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow ROLRow {
                get {
                    return ((ROLRow)(this.GetParentRow(this.Table.ParentRelations["FK__ROL_FUNCI__ROL_F__1273C1CD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ROL_FUNCI__ROL_F__1273C1CD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow FUNCIONALIDADRow {
                get {
                    return ((FUNCIONALIDADRow)(this.GetParentRow(this.Table.ParentRelations["FK__ROL_FUNCI__ROL_F__1367E606"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ROL_FUNCI__ROL_F__1367E606"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class USUARIORow : global::System.Data.DataRow {
            
            private USUARIODataTable tableUSUARIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUSUARIO = ((USUARIODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USU_ID {
                get {
                    return ((int)(this[this.tableUSUARIO.USU_IDColumn]));
                }
                set {
                    this[this.tableUSUARIO.USU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USU_USERNAME {
                get {
                    try {
                        return ((string)(this[this.tableUSUARIO.USU_USERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USU_USERNAME\' de la tabla \'USUARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.USU_USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USU_PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableUSUARIO.USU_PASSWORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USU_PASSWORD\' de la tabla \'USUARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.USU_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USU_INTENTOS_LOGIN {
                get {
                    try {
                        return ((int)(this[this.tableUSUARIO.USU_INTENTOS_LOGINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USU_INTENTOS_LOGIN\' de la tabla \'USUARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.USU_INTENTOS_LOGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USU_TIPO {
                get {
                    try {
                        return ((string)(this[this.tableUSUARIO.USU_TIPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USU_TIPO\' de la tabla \'USUARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.USU_TIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool USU_BAJA {
                get {
                    try {
                        return ((bool)(this[this.tableUSUARIO.USU_BAJAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USU_BAJA\' de la tabla \'USUARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUSUARIO.USU_BAJAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSU_USERNAMENull() {
                return this.IsNull(this.tableUSUARIO.USU_USERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSU_USERNAMENull() {
                this[this.tableUSUARIO.USU_USERNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSU_PASSWORDNull() {
                return this.IsNull(this.tableUSUARIO.USU_PASSWORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSU_PASSWORDNull() {
                this[this.tableUSUARIO.USU_PASSWORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSU_INTENTOS_LOGINNull() {
                return this.IsNull(this.tableUSUARIO.USU_INTENTOS_LOGINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSU_INTENTOS_LOGINNull() {
                this[this.tableUSUARIO.USU_INTENTOS_LOGINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSU_TIPONull() {
                return this.IsNull(this.tableUSUARIO.USU_TIPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSU_TIPONull() {
                this[this.tableUSUARIO.USU_TIPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSU_BAJANull() {
                return this.IsNull(this.tableUSUARIO.USU_BAJAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSU_BAJANull() {
                this[this.tableUSUARIO.USU_BAJAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow[] GetCLIENTERows() {
                if ((this.Table.ChildRelations["FK__CLIENTE__CLI_USU__182C9B23"] == null)) {
                    return new CLIENTERow[0];
                }
                else {
                    return ((CLIENTERow[])(base.GetChildRows(this.Table.ChildRelations["FK__CLIENTE__CLI_USU__182C9B23"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow[] GetEMPRESARows() {
                if ((this.Table.ChildRelations["FK__EMPRESA__EMP_USU__21B6055D"] == null)) {
                    return new EMPRESARow[0];
                }
                else {
                    return ((EMPRESARow[])(base.GetChildRows(this.Table.ChildRelations["FK__EMPRESA__EMP_USU__21B6055D"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow[] GetUSUARIO_ROLRows() {
                if ((this.Table.ChildRelations["FK__USUARIO_R__USU_R__08EA5793"] == null)) {
                    return new USUARIO_ROLRow[0];
                }
                else {
                    return ((USUARIO_ROLRow[])(base.GetChildRows(this.Table.ChildRelations["FK__USUARIO_R__USU_R__08EA5793"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class USUARIO_ROLRow : global::System.Data.DataRow {
            
            private USUARIO_ROLDataTable tableUSUARIO_ROL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal USUARIO_ROLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUSUARIO_ROL = ((USUARIO_ROLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USU_ROL_USUARIO_ID {
                get {
                    return ((int)(this[this.tableUSUARIO_ROL.USU_ROL_USUARIO_IDColumn]));
                }
                set {
                    this[this.tableUSUARIO_ROL.USU_ROL_USUARIO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USU_ROL_ROL_ID {
                get {
                    return ((int)(this[this.tableUSUARIO_ROL.USU_ROL_ROL_IDColumn]));
                }
                set {
                    this[this.tableUSUARIO_ROL.USU_ROL_ROL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow USUARIORow {
                get {
                    return ((USUARIORow)(this.GetParentRow(this.Table.ParentRelations["FK__USUARIO_R__USU_R__08EA5793"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__USUARIO_R__USU_R__08EA5793"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow ROLRow {
                get {
                    return ((ROLRow)(this.GetParentRow(this.Table.ParentRelations["FK__USUARIO_R__USU_R__09DE7BCC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__USUARIO_R__USU_R__09DE7BCC"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CLIENTERowChangeEvent : global::System.EventArgs {
            
            private CLIENTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERowChangeEvent(CLIENTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EMPRESARowChangeEvent : global::System.EventArgs {
            
            private EMPRESARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARowChangeEvent(EMPRESARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPRESARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FUNCIONALIDADRowChangeEvent : global::System.EventArgs {
            
            private FUNCIONALIDADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRowChangeEvent(FUNCIONALIDADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FUNCIONALIDADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ROLRowChangeEvent : global::System.EventArgs {
            
            private ROLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRowChangeEvent(ROLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ROL_FUNCIONALIDADRowChangeEvent : global::System.EventArgs {
            
            private ROL_FUNCIONALIDADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRowChangeEvent(ROL_FUNCIONALIDADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROL_FUNCIONALIDADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class USUARIORowChangeEvent : global::System.EventArgs {
            
            private USUARIORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORowChangeEvent(USUARIORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class USUARIO_ROLRowChangeEvent : global::System.EventArgs {
            
            private USUARIO_ROLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRowChangeEvent(USUARIO_ROLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public USUARIO_ROLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FrbaCommerce.GD1C2014DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CLIENTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CLIENTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CLIENTE";
            tableMapping.ColumnMappings.Add("CLI_ID", "CLI_ID");
            tableMapping.ColumnMappings.Add("CLI_USU_ID", "CLI_USU_ID");
            tableMapping.ColumnMappings.Add("CLI_NOMBRE", "CLI_NOMBRE");
            tableMapping.ColumnMappings.Add("CLI_APE", "CLI_APE");
            tableMapping.ColumnMappings.Add("CLI_DNI", "CLI_DNI");
            tableMapping.ColumnMappings.Add("CLI_TIPO_DOC", "CLI_TIPO_DOC");
            tableMapping.ColumnMappings.Add("CLI_MAIL", "CLI_MAIL");
            tableMapping.ColumnMappings.Add("CLI_TELEFONO", "CLI_TELEFONO");
            tableMapping.ColumnMappings.Add("CLI_CALLE", "CLI_CALLE");
            tableMapping.ColumnMappings.Add("CLI_PISO", "CLI_PISO");
            tableMapping.ColumnMappings.Add("CLI_DEPTO", "CLI_DEPTO");
            tableMapping.ColumnMappings.Add("CLI_LOCALIDAD", "CLI_LOCALIDAD");
            tableMapping.ColumnMappings.Add("CLI_COD_POSTAL", "CLI_COD_POSTAL");
            tableMapping.ColumnMappings.Add("CLI_FECHA_NAC", "CLI_FECHA_NAC");
            tableMapping.ColumnMappings.Add("CLI_CALLE_NRO", "CLI_CALLE_NRO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [STR_NOMBRE_GRUPO].[CLIENTE] WHERE (([CLI_ID] = @Original_CLI_ID) AND ((@IsNull_CLI_USU_ID = 1 AND [CLI_USU_ID] IS NULL) OR ([CLI_USU_ID] = @Original_CLI_USU_ID)) AND ((@IsNull_CLI_NOMBRE = 1 AND [CLI_NOMBRE] IS NULL) OR ([CLI_NOMBRE] = @Original_CLI_NOMBRE)) AND ((@IsNull_CLI_APE = 1 AND [CLI_APE] IS NULL) OR ([CLI_APE] = @Original_CLI_APE)) AND ((@IsNull_CLI_DNI = 1 AND [CLI_DNI] IS NULL) OR ([CLI_DNI] = @Original_CLI_DNI)) AND ((@IsNull_CLI_TIPO_DOC = 1 AND [CLI_TIPO_DOC] IS NULL) OR ([CLI_TIPO_DOC] = @Original_CLI_TIPO_DOC)) AND ((@IsNull_CLI_MAIL = 1 AND [CLI_MAIL] IS NULL) OR ([CLI_MAIL] = @Original_CLI_MAIL)) AND ((@IsNull_CLI_TELEFONO = 1 AND [CLI_TELEFONO] IS NULL) OR ([CLI_TELEFONO] = @Original_CLI_TELEFONO)) AND ((@IsNull_CLI_CALLE = 1 AND [CLI_CALLE] IS NULL) OR ([CLI_CALLE] = @Original_CLI_CALLE)) AND ((@IsNull_CLI_PISO = 1 AND [CLI_PISO] IS NULL) OR ([CLI_PISO] = @Original_CLI_PISO)) AND ((@IsNull_CLI_DEPTO = 1 AND [CLI_DEPTO] IS NULL) OR ([CLI_DEPTO] = @Original_CLI_DEPTO)) AND ((@IsNull_CLI_LOCALIDAD = 1 AND [CLI_LOCALIDAD] IS NULL) OR ([CLI_LOCALIDAD] = @Original_CLI_LOCALIDAD)) AND ((@IsNull_CLI_COD_POSTAL = 1 AND [CLI_COD_POSTAL] IS NULL) OR ([CLI_COD_POSTAL] = @Original_CLI_COD_POSTAL)) AND ((@IsNull_CLI_FECHA_NAC = 1 AND [CLI_FECHA_NAC] IS NULL) OR ([CLI_FECHA_NAC] = @Original_CLI_FECHA_NAC)) AND ((@IsNull_CLI_CALLE_NRO = 1 AND [CLI_CALLE_NRO] IS NULL) OR ([CLI_CALLE_NRO] = @Original_CLI_CALLE_NRO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_APE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_APE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_TIPO_DOC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_TIPO_DOC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_MAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_CALLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_DEPTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_DEPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_LOCALIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_FECHA_NAC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_FECHA_NAC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [STR_NOMBRE_GRUPO].[CLIENTE] ([CLI_USU_ID], [CLI_NOMBRE], [CLI_APE], [CLI_DNI], [CLI_TIPO_DOC], [CLI_MAIL], [CLI_TELEFONO], [CLI_CALLE], [CLI_PISO], [CLI_DEPTO], [CLI_LOCALIDAD], [CLI_COD_POSTAL], [CLI_FECHA_NAC], [CLI_CALLE_NRO]) VALUES (@CLI_USU_ID, @CLI_NOMBRE, @CLI_APE, @CLI_DNI, @CLI_TIPO_DOC, @CLI_MAIL, @CLI_TELEFONO, @CLI_CALLE, @CLI_PISO, @CLI_DEPTO, @CLI_LOCALIDAD, @CLI_COD_POSTAL, @CLI_FECHA_NAC, @CLI_CALLE_NRO);
SELECT CLI_ID, CLI_USU_ID, CLI_NOMBRE, CLI_APE, CLI_DNI, CLI_TIPO_DOC, CLI_MAIL, CLI_TELEFONO, CLI_CALLE, CLI_PISO, CLI_DEPTO, CLI_LOCALIDAD, CLI_COD_POSTAL, CLI_FECHA_NAC, CLI_CALLE_NRO FROM STR_NOMBRE_GRUPO.CLIENTE WHERE (CLI_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_APE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_TIPO_DOC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_DEPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_FECHA_NAC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [STR_NOMBRE_GRUPO].[CLIENTE] SET [CLI_USU_ID] = @CLI_USU_ID, [CLI_NOMBRE] " +
                "= @CLI_NOMBRE, [CLI_APE] = @CLI_APE, [CLI_DNI] = @CLI_DNI, [CLI_TIPO_DOC] = @CLI" +
                "_TIPO_DOC, [CLI_MAIL] = @CLI_MAIL, [CLI_TELEFONO] = @CLI_TELEFONO, [CLI_CALLE] =" +
                " @CLI_CALLE, [CLI_PISO] = @CLI_PISO, [CLI_DEPTO] = @CLI_DEPTO, [CLI_LOCALIDAD] =" +
                " @CLI_LOCALIDAD, [CLI_COD_POSTAL] = @CLI_COD_POSTAL, [CLI_FECHA_NAC] = @CLI_FECH" +
                "A_NAC, [CLI_CALLE_NRO] = @CLI_CALLE_NRO WHERE (([CLI_ID] = @Original_CLI_ID) AND" +
                " ((@IsNull_CLI_USU_ID = 1 AND [CLI_USU_ID] IS NULL) OR ([CLI_USU_ID] = @Original" +
                "_CLI_USU_ID)) AND ((@IsNull_CLI_NOMBRE = 1 AND [CLI_NOMBRE] IS NULL) OR ([CLI_NO" +
                "MBRE] = @Original_CLI_NOMBRE)) AND ((@IsNull_CLI_APE = 1 AND [CLI_APE] IS NULL) " +
                "OR ([CLI_APE] = @Original_CLI_APE)) AND ((@IsNull_CLI_DNI = 1 AND [CLI_DNI] IS N" +
                "ULL) OR ([CLI_DNI] = @Original_CLI_DNI)) AND ((@IsNull_CLI_TIPO_DOC = 1 AND [CLI" +
                "_TIPO_DOC] IS NULL) OR ([CLI_TIPO_DOC] = @Original_CLI_TIPO_DOC)) AND ((@IsNull_" +
                "CLI_MAIL = 1 AND [CLI_MAIL] IS NULL) OR ([CLI_MAIL] = @Original_CLI_MAIL)) AND (" +
                "(@IsNull_CLI_TELEFONO = 1 AND [CLI_TELEFONO] IS NULL) OR ([CLI_TELEFONO] = @Orig" +
                "inal_CLI_TELEFONO)) AND ((@IsNull_CLI_CALLE = 1 AND [CLI_CALLE] IS NULL) OR ([CL" +
                "I_CALLE] = @Original_CLI_CALLE)) AND ((@IsNull_CLI_PISO = 1 AND [CLI_PISO] IS NU" +
                "LL) OR ([CLI_PISO] = @Original_CLI_PISO)) AND ((@IsNull_CLI_DEPTO = 1 AND [CLI_D" +
                "EPTO] IS NULL) OR ([CLI_DEPTO] = @Original_CLI_DEPTO)) AND ((@IsNull_CLI_LOCALID" +
                "AD = 1 AND [CLI_LOCALIDAD] IS NULL) OR ([CLI_LOCALIDAD] = @Original_CLI_LOCALIDA" +
                "D)) AND ((@IsNull_CLI_COD_POSTAL = 1 AND [CLI_COD_POSTAL] IS NULL) OR ([CLI_COD_" +
                "POSTAL] = @Original_CLI_COD_POSTAL)) AND ((@IsNull_CLI_FECHA_NAC = 1 AND [CLI_FE" +
                "CHA_NAC] IS NULL) OR ([CLI_FECHA_NAC] = @Original_CLI_FECHA_NAC)) AND ((@IsNull_" +
                "CLI_CALLE_NRO = 1 AND [CLI_CALLE_NRO] IS NULL) OR ([CLI_CALLE_NRO] = @Original_C" +
                "LI_CALLE_NRO)));\r\nSELECT CLI_ID, CLI_USU_ID, CLI_NOMBRE, CLI_APE, CLI_DNI, CLI_T" +
                "IPO_DOC, CLI_MAIL, CLI_TELEFONO, CLI_CALLE, CLI_PISO, CLI_DEPTO, CLI_LOCALIDAD, " +
                "CLI_COD_POSTAL, CLI_FECHA_NAC, CLI_CALLE_NRO FROM STR_NOMBRE_GRUPO.CLIENTE WHERE" +
                " (CLI_ID = @CLI_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_APE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_TIPO_DOC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_DEPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_FECHA_NAC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_APE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_APE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_APE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DNI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_TIPO_DOC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_TIPO_DOC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TIPO_DOC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_MAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_MAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_CALLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_PISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_DEPTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_DEPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_DEPTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_LOCALIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_LOCALIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_COD_POSTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_FECHA_NAC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_FECHA_NAC", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_FECHA_NAC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLI_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_CALLE_NRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLI_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CLI_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CLI_ID, CLI_USU_ID, CLI_NOMBRE, CLI_APE, CLI_DNI, CLI_TIPO_DOC, CLI_MAIL, " +
                "CLI_TELEFONO, CLI_CALLE, CLI_PISO, CLI_DEPTO, CLI_LOCALIDAD, CLI_COD_POSTAL, CLI" +
                "_FECHA_NAC, CLI_CALLE_NRO FROM STR_NOMBRE_GRUPO.CLIENTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.CLIENTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.CLIENTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.CLIENTEDataTable dataTable = new GD1C2014DataSet.CLIENTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.CLIENTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "CLIENTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CLI_ID, global::System.Nullable<int> Original_CLI_USU_ID, string Original_CLI_NOMBRE, string Original_CLI_APE, global::System.Nullable<int> Original_CLI_DNI, string Original_CLI_TIPO_DOC, string Original_CLI_MAIL, global::System.Nullable<int> Original_CLI_TELEFONO, string Original_CLI_CALLE, global::System.Nullable<int> Original_CLI_PISO, string Original_CLI_DEPTO, string Original_CLI_LOCALIDAD, global::System.Nullable<int> Original_CLI_COD_POSTAL, global::System.Nullable<global::System.DateTime> Original_CLI_FECHA_NAC, global::System.Nullable<int> Original_CLI_CALLE_NRO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CLI_ID));
            if ((Original_CLI_USU_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CLI_USU_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CLI_NOMBRE));
            }
            if ((Original_CLI_APE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CLI_APE));
            }
            if ((Original_CLI_DNI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_CLI_DNI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_TIPO_DOC == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CLI_TIPO_DOC));
            }
            if ((Original_CLI_MAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CLI_MAIL));
            }
            if ((Original_CLI_TELEFONO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_CLI_TELEFONO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_CALLE == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CLI_CALLE));
            }
            if ((Original_CLI_PISO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_CLI_PISO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_DEPTO == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_CLI_DEPTO));
            }
            if ((Original_CLI_LOCALIDAD == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CLI_LOCALIDAD));
            }
            if ((Original_CLI_COD_POSTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_CLI_COD_POSTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_FECHA_NAC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_CLI_FECHA_NAC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_CALLE_NRO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_CLI_CALLE_NRO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> CLI_USU_ID, string CLI_NOMBRE, string CLI_APE, global::System.Nullable<int> CLI_DNI, string CLI_TIPO_DOC, string CLI_MAIL, global::System.Nullable<int> CLI_TELEFONO, string CLI_CALLE, global::System.Nullable<int> CLI_PISO, string CLI_DEPTO, string CLI_LOCALIDAD, global::System.Nullable<int> CLI_COD_POSTAL, global::System.Nullable<global::System.DateTime> CLI_FECHA_NAC, global::System.Nullable<int> CLI_CALLE_NRO) {
            if ((CLI_USU_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CLI_USU_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CLI_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CLI_NOMBRE));
            }
            if ((CLI_APE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CLI_APE));
            }
            if ((CLI_DNI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CLI_DNI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CLI_TIPO_DOC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CLI_TIPO_DOC));
            }
            if ((CLI_MAIL == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CLI_MAIL));
            }
            if ((CLI_TELEFONO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(CLI_TELEFONO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CLI_CALLE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CLI_CALLE));
            }
            if ((CLI_PISO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(CLI_PISO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CLI_DEPTO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CLI_DEPTO));
            }
            if ((CLI_LOCALIDAD == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CLI_LOCALIDAD));
            }
            if ((CLI_COD_POSTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(CLI_COD_POSTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CLI_FECHA_NAC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(CLI_FECHA_NAC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CLI_CALLE_NRO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(CLI_CALLE_NRO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CLI_USU_ID, 
                    string CLI_NOMBRE, 
                    string CLI_APE, 
                    global::System.Nullable<int> CLI_DNI, 
                    string CLI_TIPO_DOC, 
                    string CLI_MAIL, 
                    global::System.Nullable<int> CLI_TELEFONO, 
                    string CLI_CALLE, 
                    global::System.Nullable<int> CLI_PISO, 
                    string CLI_DEPTO, 
                    string CLI_LOCALIDAD, 
                    global::System.Nullable<int> CLI_COD_POSTAL, 
                    global::System.Nullable<global::System.DateTime> CLI_FECHA_NAC, 
                    global::System.Nullable<int> CLI_CALLE_NRO, 
                    int Original_CLI_ID, 
                    global::System.Nullable<int> Original_CLI_USU_ID, 
                    string Original_CLI_NOMBRE, 
                    string Original_CLI_APE, 
                    global::System.Nullable<int> Original_CLI_DNI, 
                    string Original_CLI_TIPO_DOC, 
                    string Original_CLI_MAIL, 
                    global::System.Nullable<int> Original_CLI_TELEFONO, 
                    string Original_CLI_CALLE, 
                    global::System.Nullable<int> Original_CLI_PISO, 
                    string Original_CLI_DEPTO, 
                    string Original_CLI_LOCALIDAD, 
                    global::System.Nullable<int> Original_CLI_COD_POSTAL, 
                    global::System.Nullable<global::System.DateTime> Original_CLI_FECHA_NAC, 
                    global::System.Nullable<int> Original_CLI_CALLE_NRO, 
                    int CLI_ID) {
            if ((CLI_USU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CLI_USU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CLI_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CLI_NOMBRE));
            }
            if ((CLI_APE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CLI_APE));
            }
            if ((CLI_DNI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CLI_DNI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CLI_TIPO_DOC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CLI_TIPO_DOC));
            }
            if ((CLI_MAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CLI_MAIL));
            }
            if ((CLI_TELEFONO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(CLI_TELEFONO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CLI_CALLE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CLI_CALLE));
            }
            if ((CLI_PISO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(CLI_PISO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CLI_DEPTO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CLI_DEPTO));
            }
            if ((CLI_LOCALIDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CLI_LOCALIDAD));
            }
            if ((CLI_COD_POSTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(CLI_COD_POSTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CLI_FECHA_NAC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(CLI_FECHA_NAC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CLI_CALLE_NRO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CLI_CALLE_NRO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_CLI_ID));
            if ((Original_CLI_USU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_CLI_USU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CLI_NOMBRE));
            }
            if ((Original_CLI_APE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CLI_APE));
            }
            if ((Original_CLI_DNI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_CLI_DNI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_TIPO_DOC == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_CLI_TIPO_DOC));
            }
            if ((Original_CLI_MAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_CLI_MAIL));
            }
            if ((Original_CLI_TELEFONO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_CLI_TELEFONO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_CALLE == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_CLI_CALLE));
            }
            if ((Original_CLI_PISO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CLI_PISO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_DEPTO == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_CLI_DEPTO));
            }
            if ((Original_CLI_LOCALIDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_CLI_LOCALIDAD));
            }
            if ((Original_CLI_COD_POSTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_CLI_COD_POSTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_FECHA_NAC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_CLI_FECHA_NAC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_CLI_CALLE_NRO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_CLI_CALLE_NRO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(CLI_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CLI_USU_ID, 
                    string CLI_NOMBRE, 
                    string CLI_APE, 
                    global::System.Nullable<int> CLI_DNI, 
                    string CLI_TIPO_DOC, 
                    string CLI_MAIL, 
                    global::System.Nullable<int> CLI_TELEFONO, 
                    string CLI_CALLE, 
                    global::System.Nullable<int> CLI_PISO, 
                    string CLI_DEPTO, 
                    string CLI_LOCALIDAD, 
                    global::System.Nullable<int> CLI_COD_POSTAL, 
                    global::System.Nullable<global::System.DateTime> CLI_FECHA_NAC, 
                    global::System.Nullable<int> CLI_CALLE_NRO, 
                    int Original_CLI_ID, 
                    global::System.Nullable<int> Original_CLI_USU_ID, 
                    string Original_CLI_NOMBRE, 
                    string Original_CLI_APE, 
                    global::System.Nullable<int> Original_CLI_DNI, 
                    string Original_CLI_TIPO_DOC, 
                    string Original_CLI_MAIL, 
                    global::System.Nullable<int> Original_CLI_TELEFONO, 
                    string Original_CLI_CALLE, 
                    global::System.Nullable<int> Original_CLI_PISO, 
                    string Original_CLI_DEPTO, 
                    string Original_CLI_LOCALIDAD, 
                    global::System.Nullable<int> Original_CLI_COD_POSTAL, 
                    global::System.Nullable<global::System.DateTime> Original_CLI_FECHA_NAC, 
                    global::System.Nullable<int> Original_CLI_CALLE_NRO) {
            return this.Update(CLI_USU_ID, CLI_NOMBRE, CLI_APE, CLI_DNI, CLI_TIPO_DOC, CLI_MAIL, CLI_TELEFONO, CLI_CALLE, CLI_PISO, CLI_DEPTO, CLI_LOCALIDAD, CLI_COD_POSTAL, CLI_FECHA_NAC, CLI_CALLE_NRO, Original_CLI_ID, Original_CLI_USU_ID, Original_CLI_NOMBRE, Original_CLI_APE, Original_CLI_DNI, Original_CLI_TIPO_DOC, Original_CLI_MAIL, Original_CLI_TELEFONO, Original_CLI_CALLE, Original_CLI_PISO, Original_CLI_DEPTO, Original_CLI_LOCALIDAD, Original_CLI_COD_POSTAL, Original_CLI_FECHA_NAC, Original_CLI_CALLE_NRO, Original_CLI_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPRESATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EMPRESATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPRESA";
            tableMapping.ColumnMappings.Add("EMP_ID", "EMP_ID");
            tableMapping.ColumnMappings.Add("EMP_USU_ID", "EMP_USU_ID");
            tableMapping.ColumnMappings.Add("EMP_RAZON_SOCIAL", "EMP_RAZON_SOCIAL");
            tableMapping.ColumnMappings.Add("EMP_MAIL", "EMP_MAIL");
            tableMapping.ColumnMappings.Add("EMP_TELEFONO", "EMP_TELEFONO");
            tableMapping.ColumnMappings.Add("EMP_CALLE", "EMP_CALLE");
            tableMapping.ColumnMappings.Add("EMP_CALLE_NRO", "EMP_CALLE_NRO");
            tableMapping.ColumnMappings.Add("EMP_PISO", "EMP_PISO");
            tableMapping.ColumnMappings.Add("EMP_DPTO", "EMP_DPTO");
            tableMapping.ColumnMappings.Add("EMP_LOCALIDAD", "EMP_LOCALIDAD");
            tableMapping.ColumnMappings.Add("EMP_COD_POSTAL", "EMP_COD_POSTAL");
            tableMapping.ColumnMappings.Add("EMP_CIUDAD", "EMP_CIUDAD");
            tableMapping.ColumnMappings.Add("EMP_CUIT", "EMP_CUIT");
            tableMapping.ColumnMappings.Add("EMP_NOM_CONTACTO", "EMP_NOM_CONTACTO");
            tableMapping.ColumnMappings.Add("EMP_FECHA_CREACION", "EMP_FECHA_CREACION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [STR_NOMBRE_GRUPO].[EMPRESA] WHERE (([EMP_ID] = @Original_EMP_ID) AND" +
                " ((@IsNull_EMP_USU_ID = 1 AND [EMP_USU_ID] IS NULL) OR ([EMP_USU_ID] = @Original" +
                "_EMP_USU_ID)) AND ((@IsNull_EMP_RAZON_SOCIAL = 1 AND [EMP_RAZON_SOCIAL] IS NULL)" +
                " OR ([EMP_RAZON_SOCIAL] = @Original_EMP_RAZON_SOCIAL)) AND ((@IsNull_EMP_MAIL = " +
                "1 AND [EMP_MAIL] IS NULL) OR ([EMP_MAIL] = @Original_EMP_MAIL)) AND ((@IsNull_EM" +
                "P_TELEFONO = 1 AND [EMP_TELEFONO] IS NULL) OR ([EMP_TELEFONO] = @Original_EMP_TE" +
                "LEFONO)) AND ((@IsNull_EMP_CALLE = 1 AND [EMP_CALLE] IS NULL) OR ([EMP_CALLE] = " +
                "@Original_EMP_CALLE)) AND ((@IsNull_EMP_CALLE_NRO = 1 AND [EMP_CALLE_NRO] IS NUL" +
                "L) OR ([EMP_CALLE_NRO] = @Original_EMP_CALLE_NRO)) AND ((@IsNull_EMP_PISO = 1 AN" +
                "D [EMP_PISO] IS NULL) OR ([EMP_PISO] = @Original_EMP_PISO)) AND ((@IsNull_EMP_DP" +
                "TO = 1 AND [EMP_DPTO] IS NULL) OR ([EMP_DPTO] = @Original_EMP_DPTO)) AND ((@IsNu" +
                "ll_EMP_LOCALIDAD = 1 AND [EMP_LOCALIDAD] IS NULL) OR ([EMP_LOCALIDAD] = @Origina" +
                "l_EMP_LOCALIDAD)) AND ((@IsNull_EMP_COD_POSTAL = 1 AND [EMP_COD_POSTAL] IS NULL)" +
                " OR ([EMP_COD_POSTAL] = @Original_EMP_COD_POSTAL)) AND ((@IsNull_EMP_CIUDAD = 1 " +
                "AND [EMP_CIUDAD] IS NULL) OR ([EMP_CIUDAD] = @Original_EMP_CIUDAD)) AND ((@IsNul" +
                "l_EMP_CUIT = 1 AND [EMP_CUIT] IS NULL) OR ([EMP_CUIT] = @Original_EMP_CUIT)) AND" +
                " ((@IsNull_EMP_NOM_CONTACTO = 1 AND [EMP_NOM_CONTACTO] IS NULL) OR ([EMP_NOM_CON" +
                "TACTO] = @Original_EMP_NOM_CONTACTO)) AND ((@IsNull_EMP_FECHA_CREACION = 1 AND [" +
                "EMP_FECHA_CREACION] IS NULL) OR ([EMP_FECHA_CREACION] = @Original_EMP_FECHA_CREA" +
                "CION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_MAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CALLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_DPTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_DPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_LOCALIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CIUDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CIUDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CUIT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CUIT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_NOM_CONTACTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_NOM_CONTACTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_FECHA_CREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_FECHA_CREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [STR_NOMBRE_GRUPO].[EMPRESA] ([EMP_USU_ID], [EMP_RAZON_SOCIAL], [EMP_MAIL], [EMP_TELEFONO], [EMP_CALLE], [EMP_CALLE_NRO], [EMP_PISO], [EMP_DPTO], [EMP_LOCALIDAD], [EMP_COD_POSTAL], [EMP_CIUDAD], [EMP_CUIT], [EMP_NOM_CONTACTO], [EMP_FECHA_CREACION]) VALUES (@EMP_USU_ID, @EMP_RAZON_SOCIAL, @EMP_MAIL, @EMP_TELEFONO, @EMP_CALLE, @EMP_CALLE_NRO, @EMP_PISO, @EMP_DPTO, @EMP_LOCALIDAD, @EMP_COD_POSTAL, @EMP_CIUDAD, @EMP_CUIT, @EMP_NOM_CONTACTO, @EMP_FECHA_CREACION);
SELECT EMP_ID, EMP_USU_ID, EMP_RAZON_SOCIAL, EMP_MAIL, EMP_TELEFONO, EMP_CALLE, EMP_CALLE_NRO, EMP_PISO, EMP_DPTO, EMP_LOCALIDAD, EMP_COD_POSTAL, EMP_CIUDAD, EMP_CUIT, EMP_NOM_CONTACTO, EMP_FECHA_CREACION FROM STR_NOMBRE_GRUPO.EMPRESA WHERE (EMP_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_DPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CIUDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CUIT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_NOM_CONTACTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_FECHA_CREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [STR_NOMBRE_GRUPO].[EMPRESA] SET [EMP_USU_ID] = @EMP_USU_ID, [EMP_RAZON_SO" +
                "CIAL] = @EMP_RAZON_SOCIAL, [EMP_MAIL] = @EMP_MAIL, [EMP_TELEFONO] = @EMP_TELEFON" +
                "O, [EMP_CALLE] = @EMP_CALLE, [EMP_CALLE_NRO] = @EMP_CALLE_NRO, [EMP_PISO] = @EMP" +
                "_PISO, [EMP_DPTO] = @EMP_DPTO, [EMP_LOCALIDAD] = @EMP_LOCALIDAD, [EMP_COD_POSTAL" +
                "] = @EMP_COD_POSTAL, [EMP_CIUDAD] = @EMP_CIUDAD, [EMP_CUIT] = @EMP_CUIT, [EMP_NO" +
                "M_CONTACTO] = @EMP_NOM_CONTACTO, [EMP_FECHA_CREACION] = @EMP_FECHA_CREACION WHER" +
                "E (([EMP_ID] = @Original_EMP_ID) AND ((@IsNull_EMP_USU_ID = 1 AND [EMP_USU_ID] I" +
                "S NULL) OR ([EMP_USU_ID] = @Original_EMP_USU_ID)) AND ((@IsNull_EMP_RAZON_SOCIAL" +
                " = 1 AND [EMP_RAZON_SOCIAL] IS NULL) OR ([EMP_RAZON_SOCIAL] = @Original_EMP_RAZO" +
                "N_SOCIAL)) AND ((@IsNull_EMP_MAIL = 1 AND [EMP_MAIL] IS NULL) OR ([EMP_MAIL] = @" +
                "Original_EMP_MAIL)) AND ((@IsNull_EMP_TELEFONO = 1 AND [EMP_TELEFONO] IS NULL) O" +
                "R ([EMP_TELEFONO] = @Original_EMP_TELEFONO)) AND ((@IsNull_EMP_CALLE = 1 AND [EM" +
                "P_CALLE] IS NULL) OR ([EMP_CALLE] = @Original_EMP_CALLE)) AND ((@IsNull_EMP_CALL" +
                "E_NRO = 1 AND [EMP_CALLE_NRO] IS NULL) OR ([EMP_CALLE_NRO] = @Original_EMP_CALLE" +
                "_NRO)) AND ((@IsNull_EMP_PISO = 1 AND [EMP_PISO] IS NULL) OR ([EMP_PISO] = @Orig" +
                "inal_EMP_PISO)) AND ((@IsNull_EMP_DPTO = 1 AND [EMP_DPTO] IS NULL) OR ([EMP_DPTO" +
                "] = @Original_EMP_DPTO)) AND ((@IsNull_EMP_LOCALIDAD = 1 AND [EMP_LOCALIDAD] IS " +
                "NULL) OR ([EMP_LOCALIDAD] = @Original_EMP_LOCALIDAD)) AND ((@IsNull_EMP_COD_POST" +
                "AL = 1 AND [EMP_COD_POSTAL] IS NULL) OR ([EMP_COD_POSTAL] = @Original_EMP_COD_PO" +
                "STAL)) AND ((@IsNull_EMP_CIUDAD = 1 AND [EMP_CIUDAD] IS NULL) OR ([EMP_CIUDAD] =" +
                " @Original_EMP_CIUDAD)) AND ((@IsNull_EMP_CUIT = 1 AND [EMP_CUIT] IS NULL) OR ([" +
                "EMP_CUIT] = @Original_EMP_CUIT)) AND ((@IsNull_EMP_NOM_CONTACTO = 1 AND [EMP_NOM" +
                "_CONTACTO] IS NULL) OR ([EMP_NOM_CONTACTO] = @Original_EMP_NOM_CONTACTO)) AND ((" +
                "@IsNull_EMP_FECHA_CREACION = 1 AND [EMP_FECHA_CREACION] IS NULL) OR ([EMP_FECHA_" +
                "CREACION] = @Original_EMP_FECHA_CREACION)));\r\nSELECT EMP_ID, EMP_USU_ID, EMP_RAZ" +
                "ON_SOCIAL, EMP_MAIL, EMP_TELEFONO, EMP_CALLE, EMP_CALLE_NRO, EMP_PISO, EMP_DPTO," +
                " EMP_LOCALIDAD, EMP_COD_POSTAL, EMP_CIUDAD, EMP_CUIT, EMP_NOM_CONTACTO, EMP_FECH" +
                "A_CREACION FROM STR_NOMBRE_GRUPO.EMPRESA WHERE (EMP_ID = @EMP_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_DPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CIUDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_CUIT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_NOM_CONTACTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_FECHA_CREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_RAZON_SOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_RAZON_SOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_MAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_MAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_MAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CALLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CALLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CALLE_NRO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CALLE_NRO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_PISO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_PISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_DPTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_DPTO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_DPTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_LOCALIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_LOCALIDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_LOCALIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_COD_POSTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_COD_POSTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CIUDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CIUDAD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CIUDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_CUIT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_CUIT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_CUIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_NOM_CONTACTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_NOM_CONTACTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_NOM_CONTACTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMP_FECHA_CREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMP_FECHA_CREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_FECHA_CREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMP_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EMP_ID, EMP_USU_ID, EMP_RAZON_SOCIAL, EMP_MAIL, EMP_TELEFONO, EMP_CALLE, E" +
                "MP_CALLE_NRO, EMP_PISO, EMP_DPTO, EMP_LOCALIDAD, EMP_COD_POSTAL, EMP_CIUDAD, EMP" +
                "_CUIT, EMP_NOM_CONTACTO, EMP_FECHA_CREACION FROM STR_NOMBRE_GRUPO.EMPRESA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.EMPRESADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.EMPRESADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.EMPRESADataTable dataTable = new GD1C2014DataSet.EMPRESADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.EMPRESADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "EMPRESA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_EMP_ID, global::System.Nullable<int> Original_EMP_USU_ID, string Original_EMP_RAZON_SOCIAL, string Original_EMP_MAIL, global::System.Nullable<int> Original_EMP_TELEFONO, string Original_EMP_CALLE, global::System.Nullable<int> Original_EMP_CALLE_NRO, global::System.Nullable<int> Original_EMP_PISO, string Original_EMP_DPTO, string Original_EMP_LOCALIDAD, global::System.Nullable<int> Original_EMP_COD_POSTAL, string Original_EMP_CIUDAD, string Original_EMP_CUIT, string Original_EMP_NOM_CONTACTO, global::System.Nullable<global::System.DateTime> Original_EMP_FECHA_CREACION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_EMP_ID));
            if ((Original_EMP_USU_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_EMP_USU_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_RAZON_SOCIAL == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMP_RAZON_SOCIAL));
            }
            if ((Original_EMP_MAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EMP_MAIL));
            }
            if ((Original_EMP_TELEFONO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_EMP_TELEFONO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_CALLE == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_EMP_CALLE));
            }
            if ((Original_EMP_CALLE_NRO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_EMP_CALLE_NRO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_PISO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_EMP_PISO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_DPTO == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_EMP_DPTO));
            }
            if ((Original_EMP_LOCALIDAD == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EMP_LOCALIDAD));
            }
            if ((Original_EMP_COD_POSTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_EMP_COD_POSTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_CIUDAD == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_EMP_CIUDAD));
            }
            if ((Original_EMP_CUIT == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_EMP_CUIT));
            }
            if ((Original_EMP_NOM_CONTACTO == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_EMP_NOM_CONTACTO));
            }
            if ((Original_EMP_FECHA_CREACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_EMP_FECHA_CREACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> EMP_USU_ID, string EMP_RAZON_SOCIAL, string EMP_MAIL, global::System.Nullable<int> EMP_TELEFONO, string EMP_CALLE, global::System.Nullable<int> EMP_CALLE_NRO, global::System.Nullable<int> EMP_PISO, string EMP_DPTO, string EMP_LOCALIDAD, global::System.Nullable<int> EMP_COD_POSTAL, string EMP_CIUDAD, string EMP_CUIT, string EMP_NOM_CONTACTO, global::System.Nullable<global::System.DateTime> EMP_FECHA_CREACION) {
            if ((EMP_USU_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EMP_USU_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EMP_RAZON_SOCIAL == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMP_RAZON_SOCIAL));
            }
            if ((EMP_MAIL == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EMP_MAIL));
            }
            if ((EMP_TELEFONO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(EMP_TELEFONO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EMP_CALLE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMP_CALLE));
            }
            if ((EMP_CALLE_NRO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(EMP_CALLE_NRO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((EMP_PISO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(EMP_PISO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((EMP_DPTO == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EMP_DPTO));
            }
            if ((EMP_LOCALIDAD == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EMP_LOCALIDAD));
            }
            if ((EMP_COD_POSTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(EMP_COD_POSTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((EMP_CIUDAD == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(EMP_CIUDAD));
            }
            if ((EMP_CUIT == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EMP_CUIT));
            }
            if ((EMP_NOM_CONTACTO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EMP_NOM_CONTACTO));
            }
            if ((EMP_FECHA_CREACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(EMP_FECHA_CREACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> EMP_USU_ID, 
                    string EMP_RAZON_SOCIAL, 
                    string EMP_MAIL, 
                    global::System.Nullable<int> EMP_TELEFONO, 
                    string EMP_CALLE, 
                    global::System.Nullable<int> EMP_CALLE_NRO, 
                    global::System.Nullable<int> EMP_PISO, 
                    string EMP_DPTO, 
                    string EMP_LOCALIDAD, 
                    global::System.Nullable<int> EMP_COD_POSTAL, 
                    string EMP_CIUDAD, 
                    string EMP_CUIT, 
                    string EMP_NOM_CONTACTO, 
                    global::System.Nullable<global::System.DateTime> EMP_FECHA_CREACION, 
                    int Original_EMP_ID, 
                    global::System.Nullable<int> Original_EMP_USU_ID, 
                    string Original_EMP_RAZON_SOCIAL, 
                    string Original_EMP_MAIL, 
                    global::System.Nullable<int> Original_EMP_TELEFONO, 
                    string Original_EMP_CALLE, 
                    global::System.Nullable<int> Original_EMP_CALLE_NRO, 
                    global::System.Nullable<int> Original_EMP_PISO, 
                    string Original_EMP_DPTO, 
                    string Original_EMP_LOCALIDAD, 
                    global::System.Nullable<int> Original_EMP_COD_POSTAL, 
                    string Original_EMP_CIUDAD, 
                    string Original_EMP_CUIT, 
                    string Original_EMP_NOM_CONTACTO, 
                    global::System.Nullable<global::System.DateTime> Original_EMP_FECHA_CREACION, 
                    int EMP_ID) {
            if ((EMP_USU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EMP_USU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EMP_RAZON_SOCIAL == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMP_RAZON_SOCIAL));
            }
            if ((EMP_MAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EMP_MAIL));
            }
            if ((EMP_TELEFONO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(EMP_TELEFONO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EMP_CALLE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EMP_CALLE));
            }
            if ((EMP_CALLE_NRO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(EMP_CALLE_NRO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((EMP_PISO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(EMP_PISO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((EMP_DPTO == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EMP_DPTO));
            }
            if ((EMP_LOCALIDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(EMP_LOCALIDAD));
            }
            if ((EMP_COD_POSTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(EMP_COD_POSTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((EMP_CIUDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(EMP_CIUDAD));
            }
            if ((EMP_CUIT == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EMP_CUIT));
            }
            if ((EMP_NOM_CONTACTO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EMP_NOM_CONTACTO));
            }
            if ((EMP_FECHA_CREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(EMP_FECHA_CREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_EMP_ID));
            if ((Original_EMP_USU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_EMP_USU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_RAZON_SOCIAL == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_EMP_RAZON_SOCIAL));
            }
            if ((Original_EMP_MAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_EMP_MAIL));
            }
            if ((Original_EMP_TELEFONO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_EMP_TELEFONO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_CALLE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_EMP_CALLE));
            }
            if ((Original_EMP_CALLE_NRO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_EMP_CALLE_NRO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_PISO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_EMP_PISO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_DPTO == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_EMP_DPTO));
            }
            if ((Original_EMP_LOCALIDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EMP_LOCALIDAD));
            }
            if ((Original_EMP_COD_POSTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_EMP_COD_POSTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_EMP_CIUDAD == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_EMP_CIUDAD));
            }
            if ((Original_EMP_CUIT == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_EMP_CUIT));
            }
            if ((Original_EMP_NOM_CONTACTO == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_EMP_NOM_CONTACTO));
            }
            if ((Original_EMP_FECHA_CREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_EMP_FECHA_CREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(EMP_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> EMP_USU_ID, 
                    string EMP_RAZON_SOCIAL, 
                    string EMP_MAIL, 
                    global::System.Nullable<int> EMP_TELEFONO, 
                    string EMP_CALLE, 
                    global::System.Nullable<int> EMP_CALLE_NRO, 
                    global::System.Nullable<int> EMP_PISO, 
                    string EMP_DPTO, 
                    string EMP_LOCALIDAD, 
                    global::System.Nullable<int> EMP_COD_POSTAL, 
                    string EMP_CIUDAD, 
                    string EMP_CUIT, 
                    string EMP_NOM_CONTACTO, 
                    global::System.Nullable<global::System.DateTime> EMP_FECHA_CREACION, 
                    int Original_EMP_ID, 
                    global::System.Nullable<int> Original_EMP_USU_ID, 
                    string Original_EMP_RAZON_SOCIAL, 
                    string Original_EMP_MAIL, 
                    global::System.Nullable<int> Original_EMP_TELEFONO, 
                    string Original_EMP_CALLE, 
                    global::System.Nullable<int> Original_EMP_CALLE_NRO, 
                    global::System.Nullable<int> Original_EMP_PISO, 
                    string Original_EMP_DPTO, 
                    string Original_EMP_LOCALIDAD, 
                    global::System.Nullable<int> Original_EMP_COD_POSTAL, 
                    string Original_EMP_CIUDAD, 
                    string Original_EMP_CUIT, 
                    string Original_EMP_NOM_CONTACTO, 
                    global::System.Nullable<global::System.DateTime> Original_EMP_FECHA_CREACION) {
            return this.Update(EMP_USU_ID, EMP_RAZON_SOCIAL, EMP_MAIL, EMP_TELEFONO, EMP_CALLE, EMP_CALLE_NRO, EMP_PISO, EMP_DPTO, EMP_LOCALIDAD, EMP_COD_POSTAL, EMP_CIUDAD, EMP_CUIT, EMP_NOM_CONTACTO, EMP_FECHA_CREACION, Original_EMP_ID, Original_EMP_USU_ID, Original_EMP_RAZON_SOCIAL, Original_EMP_MAIL, Original_EMP_TELEFONO, Original_EMP_CALLE, Original_EMP_CALLE_NRO, Original_EMP_PISO, Original_EMP_DPTO, Original_EMP_LOCALIDAD, Original_EMP_COD_POSTAL, Original_EMP_CIUDAD, Original_EMP_CUIT, Original_EMP_NOM_CONTACTO, Original_EMP_FECHA_CREACION, Original_EMP_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FUNCIONALIDADTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FUNCIONALIDADTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FUNCIONALIDAD";
            tableMapping.ColumnMappings.Add("FUN_ID", "FUN_ID");
            tableMapping.ColumnMappings.Add("FUN_NOMBRE", "FUN_NOMBRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [STR_NOMBRE_GRUPO].[FUNCIONALIDAD] WHERE (([FUN_ID] = @Original_FUN_I" +
                "D) AND ((@IsNull_FUN_NOMBRE = 1 AND [FUN_NOMBRE] IS NULL) OR ([FUN_NOMBRE] = @Or" +
                "iginal_FUN_NOMBRE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUN_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FUN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [STR_NOMBRE_GRUPO].[FUNCIONALIDAD] ([FUN_ID], [FUN_NOMBRE]) VALUES (@" +
                "FUN_ID, @FUN_NOMBRE);\r\nSELECT FUN_ID, FUN_NOMBRE FROM STR_NOMBRE_GRUPO.FUNCIONAL" +
                "IDAD WHERE (FUN_ID = @FUN_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUN_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [STR_NOMBRE_GRUPO].[FUNCIONALIDAD] SET [FUN_ID] = @FUN_ID, [FUN_NOMBRE] = @FUN_NOMBRE WHERE (([FUN_ID] = @Original_FUN_ID) AND ((@IsNull_FUN_NOMBRE = 1 AND [FUN_NOMBRE] IS NULL) OR ([FUN_NOMBRE] = @Original_FUN_NOMBRE)));
SELECT FUN_ID, FUN_NOMBRE FROM STR_NOMBRE_GRUPO.FUNCIONALIDAD WHERE (FUN_ID = @FUN_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUN_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUN_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FUN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FUN_ID, FUN_NOMBRE FROM STR_NOMBRE_GRUPO.FUNCIONALIDAD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.FUNCIONALIDADDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.FUNCIONALIDADDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.FUNCIONALIDADDataTable dataTable = new GD1C2014DataSet.FUNCIONALIDADDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.FUNCIONALIDADDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "FUNCIONALIDAD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_FUN_ID, string Original_FUN_NOMBRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_FUN_ID));
            if ((Original_FUN_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FUN_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int FUN_ID, string FUN_NOMBRE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(FUN_ID));
            if ((FUN_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FUN_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int FUN_ID, string FUN_NOMBRE, int Original_FUN_ID, string Original_FUN_NOMBRE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(FUN_ID));
            if ((FUN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FUN_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_FUN_ID));
            if ((Original_FUN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_FUN_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FUN_NOMBRE, int Original_FUN_ID, string Original_FUN_NOMBRE) {
            return this.Update(Original_FUN_ID, FUN_NOMBRE, Original_FUN_ID, Original_FUN_NOMBRE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ROLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROL";
            tableMapping.ColumnMappings.Add("ROL_ID", "ROL_ID");
            tableMapping.ColumnMappings.Add("ROL_NOMBRE", "ROL_NOMBRE");
            tableMapping.ColumnMappings.Add("ROL_BAJA", "ROL_BAJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [STR_NOMBRE_GRUPO].[ROL] WHERE (([ROL_ID] = @Original_ROL_ID) AND ((@IsNull_ROL_NOMBRE = 1 AND [ROL_NOMBRE] IS NULL) OR ([ROL_NOMBRE] = @Original_ROL_NOMBRE)) AND ((@IsNull_ROL_BAJA = 1 AND [ROL_BAJA] IS NULL) OR ([ROL_BAJA] = @Original_ROL_BAJA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROL_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROL_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [STR_NOMBRE_GRUPO].[ROL] ([ROL_NOMBRE], [ROL_BAJA]) VALUES (@ROL_NOMB" +
                "RE, @ROL_BAJA);\r\nSELECT ROL_ID, ROL_NOMBRE, ROL_BAJA FROM STR_NOMBRE_GRUPO.ROL W" +
                "HERE (ROL_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [STR_NOMBRE_GRUPO].[ROL] SET [ROL_NOMBRE] = @ROL_NOMBRE, [ROL_BAJA] = @ROL_BAJA WHERE (([ROL_ID] = @Original_ROL_ID) AND ((@IsNull_ROL_NOMBRE = 1 AND [ROL_NOMBRE] IS NULL) OR ([ROL_NOMBRE] = @Original_ROL_NOMBRE)) AND ((@IsNull_ROL_BAJA = 1 AND [ROL_BAJA] IS NULL) OR ([ROL_BAJA] = @Original_ROL_BAJA)));
SELECT ROL_ID, ROL_NOMBRE, ROL_BAJA FROM STR_NOMBRE_GRUPO.ROL WHERE (ROL_ID = @ROL_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROL_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROL_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ROL_ID, ROL_NOMBRE, ROL_BAJA FROM STR_NOMBRE_GRUPO.ROL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.ROLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.ROLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.ROLDataTable dataTable = new GD1C2014DataSet.ROLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.ROLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "ROL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ROL_ID, string Original_ROL_NOMBRE, global::System.Nullable<bool> Original_ROL_BAJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ROL_ID));
            if ((Original_ROL_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ROL_NOMBRE));
            }
            if ((Original_ROL_BAJA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_ROL_BAJA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ROL_NOMBRE, global::System.Nullable<bool> ROL_BAJA) {
            if ((ROL_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ROL_NOMBRE));
            }
            if ((ROL_BAJA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(ROL_BAJA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ROL_NOMBRE, global::System.Nullable<bool> ROL_BAJA, int Original_ROL_ID, string Original_ROL_NOMBRE, global::System.Nullable<bool> Original_ROL_BAJA, int ROL_ID) {
            if ((ROL_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ROL_NOMBRE));
            }
            if ((ROL_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(ROL_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ROL_ID));
            if ((Original_ROL_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ROL_NOMBRE));
            }
            if ((Original_ROL_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(Original_ROL_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ROL_NOMBRE, global::System.Nullable<bool> ROL_BAJA, int Original_ROL_ID, string Original_ROL_NOMBRE, global::System.Nullable<bool> Original_ROL_BAJA) {
            return this.Update(ROL_NOMBRE, ROL_BAJA, Original_ROL_ID, Original_ROL_NOMBRE, Original_ROL_BAJA, Original_ROL_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROL_FUNCIONALIDADTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ROL_FUNCIONALIDADTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROL_FUNCIONALIDAD";
            tableMapping.ColumnMappings.Add("ROL_FUN_ROL", "ROL_FUN_ROL");
            tableMapping.ColumnMappings.Add("ROL_FUN_FUN", "ROL_FUN_FUN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [STR_NOMBRE_GRUPO].[ROL_FUNCIONALIDAD] WHERE (([ROL_FUN_ROL] = @Origi" +
                "nal_ROL_FUN_ROL) AND ([ROL_FUN_FUN] = @Original_ROL_FUN_FUN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_FUN_ROL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_ROL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_FUN_FUN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_FUN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [STR_NOMBRE_GRUPO].[ROL_FUNCIONALIDAD] ([ROL_FUN_ROL], [ROL_FUN_FUN]) VALUES (@ROL_FUN_ROL, @ROL_FUN_FUN);
SELECT ROL_FUN_ROL, ROL_FUN_FUN FROM STR_NOMBRE_GRUPO.ROL_FUNCIONALIDAD WHERE (ROL_FUN_FUN = @ROL_FUN_FUN) AND (ROL_FUN_ROL = @ROL_FUN_ROL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_FUN_ROL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_ROL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_FUN_FUN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_FUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [STR_NOMBRE_GRUPO].[ROL_FUNCIONALIDAD] SET [ROL_FUN_ROL] = @ROL_FUN_ROL, [ROL_FUN_FUN] = @ROL_FUN_FUN WHERE (([ROL_FUN_ROL] = @Original_ROL_FUN_ROL) AND ([ROL_FUN_FUN] = @Original_ROL_FUN_FUN));
SELECT ROL_FUN_ROL, ROL_FUN_FUN FROM STR_NOMBRE_GRUPO.ROL_FUNCIONALIDAD WHERE (ROL_FUN_FUN = @ROL_FUN_FUN) AND (ROL_FUN_ROL = @ROL_FUN_ROL)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_FUN_ROL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_ROL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_FUN_FUN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_FUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_FUN_ROL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_ROL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_FUN_FUN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_FUN_FUN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ROL_FUN_ROL, ROL_FUN_FUN FROM STR_NOMBRE_GRUPO.ROL_FUNCIONALIDAD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.ROL_FUNCIONALIDADDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.ROL_FUNCIONALIDADDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.ROL_FUNCIONALIDADDataTable dataTable = new GD1C2014DataSet.ROL_FUNCIONALIDADDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.ROL_FUNCIONALIDADDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "ROL_FUNCIONALIDAD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ROL_FUN_ROL, int Original_ROL_FUN_FUN) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ROL_FUN_ROL));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ROL_FUN_FUN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ROL_FUN_ROL, int ROL_FUN_FUN) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ROL_FUN_ROL));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ROL_FUN_FUN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ROL_FUN_ROL, int ROL_FUN_FUN, int Original_ROL_FUN_ROL, int Original_ROL_FUN_FUN) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ROL_FUN_ROL));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ROL_FUN_FUN));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ROL_FUN_ROL));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ROL_FUN_FUN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_ROL_FUN_ROL, int Original_ROL_FUN_FUN) {
            return this.Update(Original_ROL_FUN_ROL, Original_ROL_FUN_FUN, Original_ROL_FUN_ROL, Original_ROL_FUN_FUN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class USUARIOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public USUARIOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "USUARIO";
            tableMapping.ColumnMappings.Add("USU_ID", "USU_ID");
            tableMapping.ColumnMappings.Add("USU_USERNAME", "USU_USERNAME");
            tableMapping.ColumnMappings.Add("USU_PASSWORD", "USU_PASSWORD");
            tableMapping.ColumnMappings.Add("USU_INTENTOS_LOGIN", "USU_INTENTOS_LOGIN");
            tableMapping.ColumnMappings.Add("USU_TIPO", "USU_TIPO");
            tableMapping.ColumnMappings.Add("USU_BAJA", "USU_BAJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [STR_NOMBRE_GRUPO].[USUARIO] WHERE (([USU_ID] = @Original_USU_ID) AND ((@IsNull_USU_USERNAME = 1 AND [USU_USERNAME] IS NULL) OR ([USU_USERNAME] = @Original_USU_USERNAME)) AND ((@IsNull_USU_PASSWORD = 1 AND [USU_PASSWORD] IS NULL) OR ([USU_PASSWORD] = @Original_USU_PASSWORD)) AND ((@IsNull_USU_INTENTOS_LOGIN = 1 AND [USU_INTENTOS_LOGIN] IS NULL) OR ([USU_INTENTOS_LOGIN] = @Original_USU_INTENTOS_LOGIN)) AND ((@IsNull_USU_TIPO = 1 AND [USU_TIPO] IS NULL) OR ([USU_TIPO] = @Original_USU_TIPO)) AND ((@IsNull_USU_BAJA = 1 AND [USU_BAJA] IS NULL) OR ([USU_BAJA] = @Original_USU_BAJA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_USERNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_USERNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_PASSWORD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_TIPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [STR_NOMBRE_GRUPO].[USUARIO] ([USU_USERNAME], [USU_PASSWORD], [USU_INTENTOS_LOGIN], [USU_TIPO], [USU_BAJA]) VALUES (@USU_USERNAME, @USU_PASSWORD, @USU_INTENTOS_LOGIN, @USU_TIPO, @USU_BAJA);
SELECT USU_ID, USU_USERNAME, USU_PASSWORD, USU_INTENTOS_LOGIN, USU_TIPO, USU_BAJA FROM STR_NOMBRE_GRUPO.USUARIO WHERE (USU_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_USERNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [STR_NOMBRE_GRUPO].[USUARIO] SET [USU_USERNAME] = @USU_USERNAME, [USU_PASSWORD] = @USU_PASSWORD, [USU_INTENTOS_LOGIN] = @USU_INTENTOS_LOGIN, [USU_TIPO] = @USU_TIPO, [USU_BAJA] = @USU_BAJA WHERE (([USU_ID] = @Original_USU_ID) AND ((@IsNull_USU_USERNAME = 1 AND [USU_USERNAME] IS NULL) OR ([USU_USERNAME] = @Original_USU_USERNAME)) AND ((@IsNull_USU_PASSWORD = 1 AND [USU_PASSWORD] IS NULL) OR ([USU_PASSWORD] = @Original_USU_PASSWORD)) AND ((@IsNull_USU_INTENTOS_LOGIN = 1 AND [USU_INTENTOS_LOGIN] IS NULL) OR ([USU_INTENTOS_LOGIN] = @Original_USU_INTENTOS_LOGIN)) AND ((@IsNull_USU_TIPO = 1 AND [USU_TIPO] IS NULL) OR ([USU_TIPO] = @Original_USU_TIPO)) AND ((@IsNull_USU_BAJA = 1 AND [USU_BAJA] IS NULL) OR ([USU_BAJA] = @Original_USU_BAJA)));
SELECT USU_ID, USU_USERNAME, USU_PASSWORD, USU_INTENTOS_LOGIN, USU_TIPO, USU_BAJA FROM STR_NOMBRE_GRUPO.USUARIO WHERE (USU_ID = @USU_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_USERNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_USERNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_USERNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_USERNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_PASSWORD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_INTENTOS_LOGIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_INTENTOS_LOGIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_TIPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_TIPO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USU_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_BAJA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USU_ID, USU_USERNAME, USU_PASSWORD, USU_INTENTOS_LOGIN, USU_TIPO, USU_BAJA" +
                " FROM STR_NOMBRE_GRUPO.USUARIO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.USUARIODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.USUARIODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.USUARIODataTable dataTable = new GD1C2014DataSet.USUARIODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.USUARIODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "USUARIO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_USU_ID, string Original_USU_USERNAME, string Original_USU_PASSWORD, global::System.Nullable<int> Original_USU_INTENTOS_LOGIN, string Original_USU_TIPO, global::System.Nullable<bool> Original_USU_BAJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_USU_ID));
            if ((Original_USU_USERNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USU_USERNAME));
            }
            if ((Original_USU_PASSWORD == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_USU_PASSWORD));
            }
            if ((Original_USU_INTENTOS_LOGIN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_USU_INTENTOS_LOGIN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_USU_TIPO == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_USU_TIPO));
            }
            if ((Original_USU_BAJA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_USU_BAJA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USU_USERNAME, string USU_PASSWORD, global::System.Nullable<int> USU_INTENTOS_LOGIN, string USU_TIPO, global::System.Nullable<bool> USU_BAJA) {
            if ((USU_USERNAME == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USU_USERNAME));
            }
            if ((USU_PASSWORD == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USU_PASSWORD));
            }
            if ((USU_INTENTOS_LOGIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(USU_INTENTOS_LOGIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((USU_TIPO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USU_TIPO));
            }
            if ((USU_BAJA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(USU_BAJA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USU_USERNAME, string USU_PASSWORD, global::System.Nullable<int> USU_INTENTOS_LOGIN, string USU_TIPO, global::System.Nullable<bool> USU_BAJA, int Original_USU_ID, string Original_USU_USERNAME, string Original_USU_PASSWORD, global::System.Nullable<int> Original_USU_INTENTOS_LOGIN, string Original_USU_TIPO, global::System.Nullable<bool> Original_USU_BAJA, int USU_ID) {
            if ((USU_USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USU_USERNAME));
            }
            if ((USU_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USU_PASSWORD));
            }
            if ((USU_INTENTOS_LOGIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(USU_INTENTOS_LOGIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((USU_TIPO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USU_TIPO));
            }
            if ((USU_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(USU_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_USU_ID));
            if ((Original_USU_USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_USU_USERNAME));
            }
            if ((Original_USU_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_USU_PASSWORD));
            }
            if ((Original_USU_INTENTOS_LOGIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_USU_INTENTOS_LOGIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_USU_TIPO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_USU_TIPO));
            }
            if ((Original_USU_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_USU_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(USU_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USU_USERNAME, string USU_PASSWORD, global::System.Nullable<int> USU_INTENTOS_LOGIN, string USU_TIPO, global::System.Nullable<bool> USU_BAJA, int Original_USU_ID, string Original_USU_USERNAME, string Original_USU_PASSWORD, global::System.Nullable<int> Original_USU_INTENTOS_LOGIN, string Original_USU_TIPO, global::System.Nullable<bool> Original_USU_BAJA) {
            return this.Update(USU_USERNAME, USU_PASSWORD, USU_INTENTOS_LOGIN, USU_TIPO, USU_BAJA, Original_USU_ID, Original_USU_USERNAME, Original_USU_PASSWORD, Original_USU_INTENTOS_LOGIN, Original_USU_TIPO, Original_USU_BAJA, Original_USU_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class USUARIO_ROLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public USUARIO_ROLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "USUARIO_ROL";
            tableMapping.ColumnMappings.Add("USU_ROL_USUARIO_ID", "USU_ROL_USUARIO_ID");
            tableMapping.ColumnMappings.Add("USU_ROL_ROL_ID", "USU_ROL_ROL_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [STR_NOMBRE_GRUPO].[USUARIO_ROL] WHERE (([USU_ROL_USUARIO_ID] = @Orig" +
                "inal_USU_ROL_USUARIO_ID) AND ([USU_ROL_ROL_ID] = @Original_USU_ROL_ROL_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ROL_USUARIO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_USUARIO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ROL_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_ROL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [STR_NOMBRE_GRUPO].[USUARIO_ROL] ([USU_ROL_USUARIO_ID], [USU_ROL_ROL_ID]) VALUES (@USU_ROL_USUARIO_ID, @USU_ROL_ROL_ID);
SELECT USU_ROL_USUARIO_ID, USU_ROL_ROL_ID FROM STR_NOMBRE_GRUPO.USUARIO_ROL WHERE (USU_ROL_ROL_ID = @USU_ROL_ROL_ID) AND (USU_ROL_USUARIO_ID = @USU_ROL_USUARIO_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_ROL_USUARIO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_USUARIO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_ROL_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_ROL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [STR_NOMBRE_GRUPO].[USUARIO_ROL] SET [USU_ROL_USUARIO_ID] = @USU_ROL_USUARIO_ID, [USU_ROL_ROL_ID] = @USU_ROL_ROL_ID WHERE (([USU_ROL_USUARIO_ID] = @Original_USU_ROL_USUARIO_ID) AND ([USU_ROL_ROL_ID] = @Original_USU_ROL_ROL_ID));
SELECT USU_ROL_USUARIO_ID, USU_ROL_ROL_ID FROM STR_NOMBRE_GRUPO.USUARIO_ROL WHERE (USU_ROL_ROL_ID = @USU_ROL_ROL_ID) AND (USU_ROL_USUARIO_ID = @USU_ROL_USUARIO_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_ROL_USUARIO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_USUARIO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USU_ROL_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_ROL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ROL_USUARIO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_USUARIO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USU_ROL_ROL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USU_ROL_ROL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USU_ROL_USUARIO_ID, USU_ROL_ROL_ID FROM STR_NOMBRE_GRUPO.USUARIO_ROL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.USUARIO_ROLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.USUARIO_ROLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.USUARIO_ROLDataTable dataTable = new GD1C2014DataSet.USUARIO_ROLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.USUARIO_ROLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "USUARIO_ROL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_USU_ROL_USUARIO_ID, int Original_USU_ROL_ROL_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_USU_ROL_USUARIO_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_USU_ROL_ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int USU_ROL_USUARIO_ID, int USU_ROL_ROL_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(USU_ROL_USUARIO_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(USU_ROL_ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int USU_ROL_USUARIO_ID, int USU_ROL_ROL_ID, int Original_USU_ROL_USUARIO_ID, int Original_USU_ROL_ROL_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(USU_ROL_USUARIO_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(USU_ROL_ROL_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_USU_ROL_USUARIO_ID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_USU_ROL_ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_USU_ROL_USUARIO_ID, int Original_USU_ROL_ROL_ID) {
            return this.Update(Original_USU_ROL_USUARIO_ID, Original_USU_ROL_ROL_ID, Original_USU_ROL_USUARIO_ID, Original_USU_ROL_ROL_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CLIENTETableAdapter _cLIENTETableAdapter;
        
        private EMPRESATableAdapter _eMPRESATableAdapter;
        
        private FUNCIONALIDADTableAdapter _fUNCIONALIDADTableAdapter;
        
        private ROLTableAdapter _rOLTableAdapter;
        
        private ROL_FUNCIONALIDADTableAdapter _rOL_FUNCIONALIDADTableAdapter;
        
        private USUARIOTableAdapter _uSUARIOTableAdapter;
        
        private USUARIO_ROLTableAdapter _uSUARIO_ROLTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CLIENTETableAdapter CLIENTETableAdapter {
            get {
                return this._cLIENTETableAdapter;
            }
            set {
                this._cLIENTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EMPRESATableAdapter EMPRESATableAdapter {
            get {
                return this._eMPRESATableAdapter;
            }
            set {
                this._eMPRESATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public FUNCIONALIDADTableAdapter FUNCIONALIDADTableAdapter {
            get {
                return this._fUNCIONALIDADTableAdapter;
            }
            set {
                this._fUNCIONALIDADTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ROLTableAdapter ROLTableAdapter {
            get {
                return this._rOLTableAdapter;
            }
            set {
                this._rOLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ROL_FUNCIONALIDADTableAdapter ROL_FUNCIONALIDADTableAdapter {
            get {
                return this._rOL_FUNCIONALIDADTableAdapter;
            }
            set {
                this._rOL_FUNCIONALIDADTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public USUARIOTableAdapter USUARIOTableAdapter {
            get {
                return this._uSUARIOTableAdapter;
            }
            set {
                this._uSUARIOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public USUARIO_ROLTableAdapter USUARIO_ROLTableAdapter {
            get {
                return this._uSUARIO_ROLTableAdapter;
            }
            set {
                this._uSUARIO_ROLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cLIENTETableAdapter != null) 
                            && (this._cLIENTETableAdapter.Connection != null))) {
                    return this._cLIENTETableAdapter.Connection;
                }
                if (((this._eMPRESATableAdapter != null) 
                            && (this._eMPRESATableAdapter.Connection != null))) {
                    return this._eMPRESATableAdapter.Connection;
                }
                if (((this._fUNCIONALIDADTableAdapter != null) 
                            && (this._fUNCIONALIDADTableAdapter.Connection != null))) {
                    return this._fUNCIONALIDADTableAdapter.Connection;
                }
                if (((this._rOLTableAdapter != null) 
                            && (this._rOLTableAdapter.Connection != null))) {
                    return this._rOLTableAdapter.Connection;
                }
                if (((this._rOL_FUNCIONALIDADTableAdapter != null) 
                            && (this._rOL_FUNCIONALIDADTableAdapter.Connection != null))) {
                    return this._rOL_FUNCIONALIDADTableAdapter.Connection;
                }
                if (((this._uSUARIOTableAdapter != null) 
                            && (this._uSUARIOTableAdapter.Connection != null))) {
                    return this._uSUARIOTableAdapter.Connection;
                }
                if (((this._uSUARIO_ROLTableAdapter != null) 
                            && (this._uSUARIO_ROLTableAdapter.Connection != null))) {
                    return this._uSUARIO_ROLTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cLIENTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eMPRESATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fUNCIONALIDADTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uSUARIO_ROLTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fUNCIONALIDADTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uSUARIO_ROLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.USUARIO_ROL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uSUARIO_ROLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROL_FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOL_FUNCIONALIDADTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eMPRESATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMPRESA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMPRESATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fUNCIONALIDADTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uSUARIO_ROLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.USUARIO_ROL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uSUARIO_ROLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROL_FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOL_FUNCIONALIDADTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eMPRESATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMPRESA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMPRESATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eMPRESATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMPRESA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMPRESATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROL_FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOL_FUNCIONALIDADTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uSUARIO_ROLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.USUARIO_ROL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uSUARIO_ROLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uSUARIOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.USUARIO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uSUARIOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fUNCIONALIDADTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FUNCIONALIDAD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fUNCIONALIDADTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(GD1C2014DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cLIENTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cLIENTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._eMPRESATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMPRESATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._fUNCIONALIDADTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fUNCIONALIDADTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._rOLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._rOL_FUNCIONALIDADTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOL_FUNCIONALIDADTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._uSUARIOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uSUARIOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._uSUARIO_ROLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uSUARIO_ROLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cLIENTETableAdapter != null)) {
                    revertConnections.Add(this._cLIENTETableAdapter, this._cLIENTETableAdapter.Connection);
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cLIENTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cLIENTETableAdapter.Adapter);
                    }
                }
                if ((this._eMPRESATableAdapter != null)) {
                    revertConnections.Add(this._eMPRESATableAdapter, this._eMPRESATableAdapter.Connection);
                    this._eMPRESATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eMPRESATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eMPRESATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMPRESATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMPRESATableAdapter.Adapter);
                    }
                }
                if ((this._fUNCIONALIDADTableAdapter != null)) {
                    revertConnections.Add(this._fUNCIONALIDADTableAdapter, this._fUNCIONALIDADTableAdapter.Connection);
                    this._fUNCIONALIDADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fUNCIONALIDADTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fUNCIONALIDADTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fUNCIONALIDADTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fUNCIONALIDADTableAdapter.Adapter);
                    }
                }
                if ((this._rOLTableAdapter != null)) {
                    revertConnections.Add(this._rOLTableAdapter, this._rOLTableAdapter.Connection);
                    this._rOLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOLTableAdapter.Adapter);
                    }
                }
                if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                    revertConnections.Add(this._rOL_FUNCIONALIDADTableAdapter, this._rOL_FUNCIONALIDADTableAdapter.Connection);
                    this._rOL_FUNCIONALIDADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOL_FUNCIONALIDADTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOL_FUNCIONALIDADTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOL_FUNCIONALIDADTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOL_FUNCIONALIDADTableAdapter.Adapter);
                    }
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    revertConnections.Add(this._uSUARIOTableAdapter, this._uSUARIOTableAdapter.Connection);
                    this._uSUARIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uSUARIOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uSUARIOTableAdapter.Adapter);
                    }
                }
                if ((this._uSUARIO_ROLTableAdapter != null)) {
                    revertConnections.Add(this._uSUARIO_ROLTableAdapter, this._uSUARIO_ROLTableAdapter.Connection);
                    this._uSUARIO_ROLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uSUARIO_ROLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uSUARIO_ROLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uSUARIO_ROLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uSUARIO_ROLTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cLIENTETableAdapter != null)) {
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cLIENTETableAdapter]));
                    this._cLIENTETableAdapter.Transaction = null;
                }
                if ((this._eMPRESATableAdapter != null)) {
                    this._eMPRESATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eMPRESATableAdapter]));
                    this._eMPRESATableAdapter.Transaction = null;
                }
                if ((this._fUNCIONALIDADTableAdapter != null)) {
                    this._fUNCIONALIDADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fUNCIONALIDADTableAdapter]));
                    this._fUNCIONALIDADTableAdapter.Transaction = null;
                }
                if ((this._rOLTableAdapter != null)) {
                    this._rOLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOLTableAdapter]));
                    this._rOLTableAdapter.Transaction = null;
                }
                if ((this._rOL_FUNCIONALIDADTableAdapter != null)) {
                    this._rOL_FUNCIONALIDADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOL_FUNCIONALIDADTableAdapter]));
                    this._rOL_FUNCIONALIDADTableAdapter.Transaction = null;
                }
                if ((this._uSUARIOTableAdapter != null)) {
                    this._uSUARIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uSUARIOTableAdapter]));
                    this._uSUARIOTableAdapter.Transaction = null;
                }
                if ((this._uSUARIO_ROLTableAdapter != null)) {
                    this._uSUARIO_ROLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uSUARIO_ROLTableAdapter]));
                    this._uSUARIO_ROLTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591